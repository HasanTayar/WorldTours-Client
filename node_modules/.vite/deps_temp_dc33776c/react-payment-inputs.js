import {
  require_react_dom
} from "./chunk-QJV3R4PZ.js";
import {
  require_react
} from "./chunk-JFTBQ7A7.js";
import {
  require_prop_types,
  require_react_is
} from "./chunk-NT73QBRE.js";
import {
  __commonJS,
  __toESM
} from "./chunk-AC2VUBZ6.js";

// node_modules/stylis/stylis.min.js
var require_stylis_min = __commonJS({
  "node_modules/stylis/stylis.min.js"(exports, module2) {
    !function(e) {
      "object" == typeof exports && "undefined" != typeof module2 ? module2.exports = e(null) : "function" == typeof define && define.amd ? define(e(null)) : window.stylis = e(null);
    }(function e(a) {
      "use strict";
      var r = /^\0+/g, c = /[\0\r\f]/g, s = /: */g, t = /zoo|gra/, i = /([,: ])(transform)/g, f = /,+\s*(?![^(]*[)])/g, n = / +\s*(?![^(]*[)])/g, l = / *[\0] */g, o = /,\r+?/g, h = /([\t\r\n ])*\f?&/g, u = /:global\(((?:[^\(\)\[\]]*|\[.*\]|\([^\(\)]*\))*)\)/g, d = /\W+/g, b = /@(k\w+)\s*(\S*)\s*/, p = /::(place)/g, k = /:(read-only)/g, g = /\s+(?=[{\];=:>])/g, A = /([[}=:>])\s+/g, C = /(\{[^{]+?);(?=\})/g, w = /\s{2,}/g, v = /([^\(])(:+) */g, m = /[svh]\w+-[tblr]{2}/, x = /\(\s*(.*)\s*\)/g, $ = /([\s\S]*?);/g, y = /-self|flex-/g, O = /[^]*?(:[rp][el]a[\w-]+)[^]*/, j = /stretch|:\s*\w+\-(?:conte|avail)/, z = /([^-])(image-set\()/, N = "-webkit-", S = "-moz-", F = "-ms-", W = 59, q = 125, B = 123, D = 40, E = 41, G = 91, H = 93, I = 10, J = 13, K = 9, L = 64, M = 32, P = 38, Q = 45, R = 95, T = 42, U = 44, V = 58, X = 39, Y = 34, Z = 47, _ = 62, ee = 43, ae = 126, re = 0, ce = 12, se = 11, te = 107, ie = 109, fe = 115, ne = 112, le = 111, oe = 105, he = 99, ue = 100, de = 112, be = 1, pe = 1, ke = 0, ge = 1, Ae = 1, Ce = 1, we = 0, ve = 0, me = 0, xe = [], $e = [], ye = 0, Oe = null, je = -2, ze = -1, Ne = 0, Se = 1, Fe = 2, We = 3, qe = 0, Be = 1, De = "", Ee = "", Ge = "";
      function He(e2, a2, s2, t2, i2) {
        for (var f2, n2, o2 = 0, h2 = 0, u2 = 0, d2 = 0, g2 = 0, A2 = 0, C2 = 0, w2 = 0, m2 = 0, $2 = 0, y2 = 0, O2 = 0, j2 = 0, z2 = 0, R2 = 0, we2 = 0, $e2 = 0, Oe2 = 0, je2 = 0, ze2 = s2.length, Je2 = ze2 - 1, Re2 = "", Te2 = "", Ue = "", Ve = "", Xe = "", Ye = ""; R2 < ze2; ) {
          if (C2 = s2.charCodeAt(R2), R2 === Je2) {
            if (h2 + d2 + u2 + o2 !== 0) {
              if (0 !== h2)
                C2 = h2 === Z ? I : Z;
              d2 = u2 = o2 = 0, ze2++, Je2++;
            }
          }
          if (h2 + d2 + u2 + o2 === 0) {
            if (R2 === Je2) {
              if (we2 > 0)
                Te2 = Te2.replace(c, "");
              if (Te2.trim().length > 0) {
                switch (C2) {
                  case M:
                  case K:
                  case W:
                  case J:
                  case I:
                    break;
                  default:
                    Te2 += s2.charAt(R2);
                }
                C2 = W;
              }
            }
            if (1 === $e2)
              switch (C2) {
                case B:
                case q:
                case W:
                case Y:
                case X:
                case D:
                case E:
                case U:
                  $e2 = 0;
                case K:
                case J:
                case I:
                case M:
                  break;
                default:
                  for ($e2 = 0, je2 = R2, g2 = C2, R2--, C2 = W; je2 < ze2; )
                    switch (s2.charCodeAt(je2++)) {
                      case I:
                      case J:
                      case W:
                        ++R2, C2 = g2, je2 = ze2;
                        break;
                      case V:
                        if (we2 > 0)
                          ++R2, C2 = g2;
                      case B:
                        je2 = ze2;
                    }
              }
            switch (C2) {
              case B:
                for (g2 = (Te2 = Te2.trim()).charCodeAt(0), y2 = 1, je2 = ++R2; R2 < ze2; ) {
                  switch (C2 = s2.charCodeAt(R2)) {
                    case B:
                      y2++;
                      break;
                    case q:
                      y2--;
                      break;
                    case Z:
                      switch (A2 = s2.charCodeAt(R2 + 1)) {
                        case T:
                        case Z:
                          R2 = Qe(A2, R2, Je2, s2);
                      }
                      break;
                    case G:
                      C2++;
                    case D:
                      C2++;
                    case Y:
                    case X:
                      for (; R2++ < Je2 && s2.charCodeAt(R2) !== C2; )
                        ;
                  }
                  if (0 === y2)
                    break;
                  R2++;
                }
                if (Ue = s2.substring(je2, R2), g2 === re)
                  g2 = (Te2 = Te2.replace(r, "").trim()).charCodeAt(0);
                switch (g2) {
                  case L:
                    if (we2 > 0)
                      Te2 = Te2.replace(c, "");
                    switch (A2 = Te2.charCodeAt(1)) {
                      case ue:
                      case ie:
                      case fe:
                      case Q:
                        f2 = a2;
                        break;
                      default:
                        f2 = xe;
                    }
                    if (je2 = (Ue = He(a2, f2, Ue, A2, i2 + 1)).length, me > 0 && 0 === je2)
                      je2 = Te2.length;
                    if (ye > 0) {
                      if (f2 = Ie(xe, Te2, Oe2), n2 = Pe(We, Ue, f2, a2, pe, be, je2, A2, i2, t2), Te2 = f2.join(""), void 0 !== n2) {
                        if (0 === (je2 = (Ue = n2.trim()).length))
                          A2 = 0, Ue = "";
                      }
                    }
                    if (je2 > 0)
                      switch (A2) {
                        case fe:
                          Te2 = Te2.replace(x, Me);
                        case ue:
                        case ie:
                        case Q:
                          Ue = Te2 + "{" + Ue + "}";
                          break;
                        case te:
                          if (Ue = (Te2 = Te2.replace(b, "$1 $2" + (Be > 0 ? De : ""))) + "{" + Ue + "}", 1 === Ae || 2 === Ae && Le("@" + Ue, 3))
                            Ue = "@" + N + Ue + "@" + Ue;
                          else
                            Ue = "@" + Ue;
                          break;
                        default:
                          if (Ue = Te2 + Ue, t2 === de)
                            Ve += Ue, Ue = "";
                      }
                    else
                      Ue = "";
                    break;
                  default:
                    Ue = He(a2, Ie(a2, Te2, Oe2), Ue, t2, i2 + 1);
                }
                Xe += Ue, O2 = 0, $e2 = 0, z2 = 0, we2 = 0, Oe2 = 0, j2 = 0, Te2 = "", Ue = "", C2 = s2.charCodeAt(++R2);
                break;
              case q:
              case W:
                if ((je2 = (Te2 = (we2 > 0 ? Te2.replace(c, "") : Te2).trim()).length) > 1) {
                  if (0 === z2) {
                    if ((g2 = Te2.charCodeAt(0)) === Q || g2 > 96 && g2 < 123)
                      je2 = (Te2 = Te2.replace(" ", ":")).length;
                  }
                  if (ye > 0) {
                    if (void 0 !== (n2 = Pe(Se, Te2, a2, e2, pe, be, Ve.length, t2, i2, t2))) {
                      if (0 === (je2 = (Te2 = n2.trim()).length))
                        Te2 = "\0\0";
                    }
                  }
                  switch (g2 = Te2.charCodeAt(0), A2 = Te2.charCodeAt(1), g2) {
                    case re:
                      break;
                    case L:
                      if (A2 === oe || A2 === he) {
                        Ye += Te2 + s2.charAt(R2);
                        break;
                      }
                    default:
                      if (Te2.charCodeAt(je2 - 1) === V)
                        break;
                      Ve += Ke(Te2, g2, A2, Te2.charCodeAt(2));
                  }
                }
                O2 = 0, $e2 = 0, z2 = 0, we2 = 0, Oe2 = 0, Te2 = "", C2 = s2.charCodeAt(++R2);
            }
          }
          switch (C2) {
            case J:
            case I:
              if (h2 + d2 + u2 + o2 + ve === 0)
                switch ($2) {
                  case E:
                  case X:
                  case Y:
                  case L:
                  case ae:
                  case _:
                  case T:
                  case ee:
                  case Z:
                  case Q:
                  case V:
                  case U:
                  case W:
                  case B:
                  case q:
                    break;
                  default:
                    if (z2 > 0)
                      $e2 = 1;
                }
              if (h2 === Z)
                h2 = 0;
              else if (ge + O2 === 0 && t2 !== te && Te2.length > 0)
                we2 = 1, Te2 += "\0";
              if (ye * qe > 0)
                Pe(Ne, Te2, a2, e2, pe, be, Ve.length, t2, i2, t2);
              be = 1, pe++;
              break;
            case W:
            case q:
              if (h2 + d2 + u2 + o2 === 0) {
                be++;
                break;
              }
            default:
              switch (be++, Re2 = s2.charAt(R2), C2) {
                case K:
                case M:
                  if (d2 + o2 + h2 === 0)
                    switch (w2) {
                      case U:
                      case V:
                      case K:
                      case M:
                        Re2 = "";
                        break;
                      default:
                        if (C2 !== M)
                          Re2 = " ";
                    }
                  break;
                case re:
                  Re2 = "\\0";
                  break;
                case ce:
                  Re2 = "\\f";
                  break;
                case se:
                  Re2 = "\\v";
                  break;
                case P:
                  if (d2 + h2 + o2 === 0 && ge > 0)
                    Oe2 = 1, we2 = 1, Re2 = "\f" + Re2;
                  break;
                case 108:
                  if (d2 + h2 + o2 + ke === 0 && z2 > 0)
                    switch (R2 - z2) {
                      case 2:
                        if (w2 === ne && s2.charCodeAt(R2 - 3) === V)
                          ke = w2;
                      case 8:
                        if (m2 === le)
                          ke = m2;
                    }
                  break;
                case V:
                  if (d2 + h2 + o2 === 0)
                    z2 = R2;
                  break;
                case U:
                  if (h2 + u2 + d2 + o2 === 0)
                    we2 = 1, Re2 += "\r";
                  break;
                case Y:
                case X:
                  if (0 === h2)
                    d2 = d2 === C2 ? 0 : 0 === d2 ? C2 : d2;
                  break;
                case G:
                  if (d2 + h2 + u2 === 0)
                    o2++;
                  break;
                case H:
                  if (d2 + h2 + u2 === 0)
                    o2--;
                  break;
                case E:
                  if (d2 + h2 + o2 === 0)
                    u2--;
                  break;
                case D:
                  if (d2 + h2 + o2 === 0) {
                    if (0 === O2)
                      switch (2 * w2 + 3 * m2) {
                        case 533:
                          break;
                        default:
                          y2 = 0, O2 = 1;
                      }
                    u2++;
                  }
                  break;
                case L:
                  if (h2 + u2 + d2 + o2 + z2 + j2 === 0)
                    j2 = 1;
                  break;
                case T:
                case Z:
                  if (d2 + o2 + u2 > 0)
                    break;
                  switch (h2) {
                    case 0:
                      switch (2 * C2 + 3 * s2.charCodeAt(R2 + 1)) {
                        case 235:
                          h2 = Z;
                          break;
                        case 220:
                          je2 = R2, h2 = T;
                      }
                      break;
                    case T:
                      if (C2 === Z && w2 === T && je2 + 2 !== R2) {
                        if (33 === s2.charCodeAt(je2 + 2))
                          Ve += s2.substring(je2, R2 + 1);
                        Re2 = "", h2 = 0;
                      }
                  }
              }
              if (0 === h2) {
                if (ge + d2 + o2 + j2 === 0 && t2 !== te && C2 !== W)
                  switch (C2) {
                    case U:
                    case ae:
                    case _:
                    case ee:
                    case E:
                    case D:
                      if (0 === O2) {
                        switch (w2) {
                          case K:
                          case M:
                          case I:
                          case J:
                            Re2 += "\0";
                            break;
                          default:
                            Re2 = "\0" + Re2 + (C2 === U ? "" : "\0");
                        }
                        we2 = 1;
                      } else
                        switch (C2) {
                          case D:
                            if (z2 + 7 === R2 && 108 === w2)
                              z2 = 0;
                            O2 = ++y2;
                            break;
                          case E:
                            if (0 == (O2 = --y2))
                              we2 = 1, Re2 += "\0";
                        }
                      break;
                    case K:
                    case M:
                      switch (w2) {
                        case re:
                        case B:
                        case q:
                        case W:
                        case U:
                        case ce:
                        case K:
                        case M:
                        case I:
                        case J:
                          break;
                        default:
                          if (0 === O2)
                            we2 = 1, Re2 += "\0";
                      }
                  }
                if (Te2 += Re2, C2 !== M && C2 !== K)
                  $2 = C2;
              }
          }
          m2 = w2, w2 = C2, R2++;
        }
        if (je2 = Ve.length, me > 0) {
          if (0 === je2 && 0 === Xe.length && 0 === a2[0].length == false) {
            if (t2 !== ie || 1 === a2.length && (ge > 0 ? Ee : Ge) === a2[0])
              je2 = a2.join(",").length + 2;
          }
        }
        if (je2 > 0) {
          if (f2 = 0 === ge && t2 !== te ? function(e3) {
            for (var a3, r2, s3 = 0, t3 = e3.length, i3 = Array(t3); s3 < t3; ++s3) {
              for (var f3 = e3[s3].split(l), n3 = "", o3 = 0, h3 = 0, u3 = 0, d3 = 0, b2 = f3.length; o3 < b2; ++o3) {
                if (0 === (h3 = (r2 = f3[o3]).length) && b2 > 1)
                  continue;
                if (u3 = n3.charCodeAt(n3.length - 1), d3 = r2.charCodeAt(0), a3 = "", 0 !== o3)
                  switch (u3) {
                    case T:
                    case ae:
                    case _:
                    case ee:
                    case M:
                    case D:
                      break;
                    default:
                      a3 = " ";
                  }
                switch (d3) {
                  case P:
                    r2 = a3 + Ee;
                  case ae:
                  case _:
                  case ee:
                  case M:
                  case E:
                  case D:
                    break;
                  case G:
                    r2 = a3 + r2 + Ee;
                    break;
                  case V:
                    switch (2 * r2.charCodeAt(1) + 3 * r2.charCodeAt(2)) {
                      case 530:
                        if (Ce > 0) {
                          r2 = a3 + r2.substring(8, h3 - 1);
                          break;
                        }
                      default:
                        if (o3 < 1 || f3[o3 - 1].length < 1)
                          r2 = a3 + Ee + r2;
                    }
                    break;
                  case U:
                    a3 = "";
                  default:
                    if (h3 > 1 && r2.indexOf(":") > 0)
                      r2 = a3 + r2.replace(v, "$1" + Ee + "$2");
                    else
                      r2 = a3 + r2 + Ee;
                }
                n3 += r2;
              }
              i3[s3] = n3.replace(c, "").trim();
            }
            return i3;
          }(a2) : a2, ye > 0) {
            if (void 0 !== (n2 = Pe(Fe, Ve, f2, e2, pe, be, je2, t2, i2, t2)) && 0 === (Ve = n2).length)
              return Ye + Ve + Xe;
          }
          if (Ve = f2.join(",") + "{" + Ve + "}", Ae * ke != 0) {
            if (2 === Ae && !Le(Ve, 2))
              ke = 0;
            switch (ke) {
              case le:
                Ve = Ve.replace(k, ":" + S + "$1") + Ve;
                break;
              case ne:
                Ve = Ve.replace(p, "::" + N + "input-$1") + Ve.replace(p, "::" + S + "$1") + Ve.replace(p, ":" + F + "input-$1") + Ve;
            }
            ke = 0;
          }
        }
        return Ye + Ve + Xe;
      }
      function Ie(e2, a2, r2) {
        var c2 = a2.trim().split(o), s2 = c2, t2 = c2.length, i2 = e2.length;
        switch (i2) {
          case 0:
          case 1:
            for (var f2 = 0, n2 = 0 === i2 ? "" : e2[0] + " "; f2 < t2; ++f2)
              s2[f2] = Je(n2, s2[f2], r2, i2).trim();
            break;
          default:
            f2 = 0;
            var l2 = 0;
            for (s2 = []; f2 < t2; ++f2)
              for (var h2 = 0; h2 < i2; ++h2)
                s2[l2++] = Je(e2[h2] + " ", c2[f2], r2, i2).trim();
        }
        return s2;
      }
      function Je(e2, a2, r2, c2) {
        var s2 = a2, t2 = s2.charCodeAt(0);
        if (t2 < 33)
          t2 = (s2 = s2.trim()).charCodeAt(0);
        switch (t2) {
          case P:
            switch (ge + c2) {
              case 0:
              case 1:
                if (0 === e2.trim().length)
                  break;
              default:
                return s2.replace(h, "$1" + e2.trim());
            }
            break;
          case V:
            switch (s2.charCodeAt(1)) {
              case 103:
                if (Ce > 0 && ge > 0)
                  return s2.replace(u, "$1").replace(h, "$1" + Ge);
                break;
              default:
                return e2.trim() + s2.replace(h, "$1" + e2.trim());
            }
          default:
            if (r2 * ge > 0 && s2.indexOf("\f") > 0)
              return s2.replace(h, (e2.charCodeAt(0) === V ? "" : "$1") + e2.trim());
        }
        return e2 + s2;
      }
      function Ke(e2, a2, r2, c2) {
        var l2, o2 = 0, h2 = e2 + ";", u2 = 2 * a2 + 3 * r2 + 4 * c2;
        if (944 === u2)
          return function(e3) {
            var a3 = e3.length, r3 = e3.indexOf(":", 9) + 1, c3 = e3.substring(0, r3).trim(), s2 = e3.substring(r3, a3 - 1).trim();
            switch (e3.charCodeAt(9) * Be) {
              case 0:
                break;
              case Q:
                if (110 !== e3.charCodeAt(10))
                  break;
              default:
                for (var t2 = s2.split((s2 = "", f)), i2 = 0, r3 = 0, a3 = t2.length; i2 < a3; r3 = 0, ++i2) {
                  for (var l3 = t2[i2], o3 = l3.split(n); l3 = o3[r3]; ) {
                    var h3 = l3.charCodeAt(0);
                    if (1 === Be && (h3 > L && h3 < 90 || h3 > 96 && h3 < 123 || h3 === R || h3 === Q && l3.charCodeAt(1) !== Q))
                      switch (isNaN(parseFloat(l3)) + (-1 !== l3.indexOf("("))) {
                        case 1:
                          switch (l3) {
                            case "infinite":
                            case "alternate":
                            case "backwards":
                            case "running":
                            case "normal":
                            case "forwards":
                            case "both":
                            case "none":
                            case "linear":
                            case "ease":
                            case "ease-in":
                            case "ease-out":
                            case "ease-in-out":
                            case "paused":
                            case "reverse":
                            case "alternate-reverse":
                            case "inherit":
                            case "initial":
                            case "unset":
                            case "step-start":
                            case "step-end":
                              break;
                            default:
                              l3 += De;
                          }
                      }
                    o3[r3++] = l3;
                  }
                  s2 += (0 === i2 ? "" : ",") + o3.join(" ");
                }
            }
            if (s2 = c3 + s2 + ";", 1 === Ae || 2 === Ae && Le(s2, 1))
              return N + s2 + s2;
            return s2;
          }(h2);
        else if (0 === Ae || 2 === Ae && !Le(h2, 1))
          return h2;
        switch (u2) {
          case 1015:
            return 97 === h2.charCodeAt(10) ? N + h2 + h2 : h2;
          case 951:
            return 116 === h2.charCodeAt(3) ? N + h2 + h2 : h2;
          case 963:
            return 110 === h2.charCodeAt(5) ? N + h2 + h2 : h2;
          case 1009:
            if (100 !== h2.charCodeAt(4))
              break;
          case 969:
          case 942:
            return N + h2 + h2;
          case 978:
            return N + h2 + S + h2 + h2;
          case 1019:
          case 983:
            return N + h2 + S + h2 + F + h2 + h2;
          case 883:
            if (h2.charCodeAt(8) === Q)
              return N + h2 + h2;
            if (h2.indexOf("image-set(", 11) > 0)
              return h2.replace(z, "$1" + N + "$2") + h2;
            return h2;
          case 932:
            if (h2.charCodeAt(4) === Q)
              switch (h2.charCodeAt(5)) {
                case 103:
                  return N + "box-" + h2.replace("-grow", "") + N + h2 + F + h2.replace("grow", "positive") + h2;
                case 115:
                  return N + h2 + F + h2.replace("shrink", "negative") + h2;
                case 98:
                  return N + h2 + F + h2.replace("basis", "preferred-size") + h2;
              }
            return N + h2 + F + h2 + h2;
          case 964:
            return N + h2 + F + "flex-" + h2 + h2;
          case 1023:
            if (99 !== h2.charCodeAt(8))
              break;
            return l2 = h2.substring(h2.indexOf(":", 15)).replace("flex-", "").replace("space-between", "justify"), N + "box-pack" + l2 + N + h2 + F + "flex-pack" + l2 + h2;
          case 1005:
            return t.test(h2) ? h2.replace(s, ":" + N) + h2.replace(s, ":" + S) + h2 : h2;
          case 1e3:
            switch (o2 = (l2 = h2.substring(13).trim()).indexOf("-") + 1, l2.charCodeAt(0) + l2.charCodeAt(o2)) {
              case 226:
                l2 = h2.replace(m, "tb");
                break;
              case 232:
                l2 = h2.replace(m, "tb-rl");
                break;
              case 220:
                l2 = h2.replace(m, "lr");
                break;
              default:
                return h2;
            }
            return N + h2 + F + l2 + h2;
          case 1017:
            if (-1 === h2.indexOf("sticky", 9))
              return h2;
          case 975:
            switch (o2 = (h2 = e2).length - 10, u2 = (l2 = (33 === h2.charCodeAt(o2) ? h2.substring(0, o2) : h2).substring(e2.indexOf(":", 7) + 1).trim()).charCodeAt(0) + (0 | l2.charCodeAt(7))) {
              case 203:
                if (l2.charCodeAt(8) < 111)
                  break;
              case 115:
                h2 = h2.replace(l2, N + l2) + ";" + h2;
                break;
              case 207:
              case 102:
                h2 = h2.replace(l2, N + (u2 > 102 ? "inline-" : "") + "box") + ";" + h2.replace(l2, N + l2) + ";" + h2.replace(l2, F + l2 + "box") + ";" + h2;
            }
            return h2 + ";";
          case 938:
            if (h2.charCodeAt(5) === Q)
              switch (h2.charCodeAt(6)) {
                case 105:
                  return l2 = h2.replace("-items", ""), N + h2 + N + "box-" + l2 + F + "flex-" + l2 + h2;
                case 115:
                  return N + h2 + F + "flex-item-" + h2.replace(y, "") + h2;
                default:
                  return N + h2 + F + "flex-line-pack" + h2.replace("align-content", "").replace(y, "") + h2;
              }
            break;
          case 973:
          case 989:
            if (h2.charCodeAt(3) !== Q || 122 === h2.charCodeAt(4))
              break;
          case 931:
          case 953:
            if (true === j.test(e2))
              if (115 === (l2 = e2.substring(e2.indexOf(":") + 1)).charCodeAt(0))
                return Ke(e2.replace("stretch", "fill-available"), a2, r2, c2).replace(":fill-available", ":stretch");
              else
                return h2.replace(l2, N + l2) + h2.replace(l2, S + l2.replace("fill-", "")) + h2;
            break;
          case 962:
            if (h2 = N + h2 + (102 === h2.charCodeAt(5) ? F + h2 : "") + h2, r2 + c2 === 211 && 105 === h2.charCodeAt(13) && h2.indexOf("transform", 10) > 0)
              return h2.substring(0, h2.indexOf(";", 27) + 1).replace(i, "$1" + N + "$2") + h2;
        }
        return h2;
      }
      function Le(e2, a2) {
        var r2 = e2.indexOf(1 === a2 ? ":" : "{"), c2 = e2.substring(0, 3 !== a2 ? r2 : 10), s2 = e2.substring(r2 + 1, e2.length - 1);
        return Oe(2 !== a2 ? c2 : c2.replace(O, "$1"), s2, a2);
      }
      function Me(e2, a2) {
        var r2 = Ke(a2, a2.charCodeAt(0), a2.charCodeAt(1), a2.charCodeAt(2));
        return r2 !== a2 + ";" ? r2.replace($, " or ($1)").substring(4) : "(" + a2 + ")";
      }
      function Pe(e2, a2, r2, c2, s2, t2, i2, f2, n2, l2) {
        for (var o2, h2 = 0, u2 = a2; h2 < ye; ++h2)
          switch (o2 = $e[h2].call(Te, e2, u2, r2, c2, s2, t2, i2, f2, n2, l2)) {
            case void 0:
            case false:
            case true:
            case null:
              break;
            default:
              u2 = o2;
          }
        if (u2 !== a2)
          return u2;
      }
      function Qe(e2, a2, r2, c2) {
        for (var s2 = a2 + 1; s2 < r2; ++s2)
          switch (c2.charCodeAt(s2)) {
            case Z:
              if (e2 === T) {
                if (c2.charCodeAt(s2 - 1) === T && a2 + 2 !== s2)
                  return s2 + 1;
              }
              break;
            case I:
              if (e2 === Z)
                return s2 + 1;
          }
        return s2;
      }
      function Re(e2) {
        for (var a2 in e2) {
          var r2 = e2[a2];
          switch (a2) {
            case "keyframe":
              Be = 0 | r2;
              break;
            case "global":
              Ce = 0 | r2;
              break;
            case "cascade":
              ge = 0 | r2;
              break;
            case "compress":
              we = 0 | r2;
              break;
            case "semicolon":
              ve = 0 | r2;
              break;
            case "preserve":
              me = 0 | r2;
              break;
            case "prefix":
              if (Oe = null, !r2)
                Ae = 0;
              else if ("function" != typeof r2)
                Ae = 1;
              else
                Ae = 2, Oe = r2;
          }
        }
        return Re;
      }
      function Te(a2, r2) {
        if (void 0 !== this && this.constructor === Te)
          return e(a2);
        var s2 = a2, t2 = s2.charCodeAt(0);
        if (t2 < 33)
          t2 = (s2 = s2.trim()).charCodeAt(0);
        if (Be > 0)
          De = s2.replace(d, t2 === G ? "" : "-");
        if (t2 = 1, 1 === ge)
          Ge = s2;
        else
          Ee = s2;
        var i2, f2 = [Ge];
        if (ye > 0) {
          if (void 0 !== (i2 = Pe(ze, r2, f2, f2, pe, be, 0, 0, 0, 0)) && "string" == typeof i2)
            r2 = i2;
        }
        var n2 = He(xe, f2, r2, 0, 0);
        if (ye > 0) {
          if (void 0 !== (i2 = Pe(je, n2, f2, f2, pe, be, n2.length, 0, 0, 0)) && "string" != typeof (n2 = i2))
            t2 = 0;
        }
        return De = "", Ge = "", Ee = "", ke = 0, pe = 1, be = 1, we * t2 == 0 ? n2 : n2.replace(c, "").replace(g, "").replace(A, "$1").replace(C, "$1").replace(w, " ");
      }
      if (Te.use = function e2(a2) {
        switch (a2) {
          case void 0:
          case null:
            ye = $e.length = 0;
            break;
          default:
            if ("function" == typeof a2)
              $e[ye++] = a2;
            else if ("object" == typeof a2)
              for (var r2 = 0, c2 = a2.length; r2 < c2; ++r2)
                e2(a2[r2]);
            else
              qe = 0 | !!a2;
        }
        return e2;
      }, Te.set = Re, void 0 !== a)
        Re(a);
      return Te;
    });
  }
});

// node_modules/stylis-rule-sheet/index.js
var require_stylis_rule_sheet = __commonJS({
  "node_modules/stylis-rule-sheet/index.js"(exports, module2) {
    (function(factory) {
      typeof exports === "object" && typeof module2 !== "undefined" ? module2["exports"] = factory() : typeof define === "function" && define["amd"] ? define(factory()) : window["stylisRuleSheet"] = factory();
    })(function() {
      "use strict";
      return function(insertRule) {
        var delimiter = "/*|*/";
        var needle = delimiter + "}";
        function toSheet(block) {
          if (block)
            try {
              insertRule(block + "}");
            } catch (e) {
            }
        }
        return function ruleSheet(context, content, selectors, parents, line, column, length, ns, depth, at) {
          switch (context) {
            case 1:
              if (depth === 0 && content.charCodeAt(0) === 64)
                return insertRule(content + ";"), "";
              break;
            case 2:
              if (ns === 0)
                return content + delimiter;
              break;
            case 3:
              switch (ns) {
                case 102:
                case 112:
                  return insertRule(selectors[0] + content), "";
                default:
                  return content + (at === 0 ? delimiter : "");
              }
            case -2:
              content.split(needle).forEach(toSheet);
          }
        };
      };
    });
  }
});

// node_modules/react-payment-inputs/es/utils/cardTypes-4f45f8d3.js
var DEFAULT_CVC_LENGTH = 3;
var DEFAULT_ZIP_LENGTH = 5;
var DEFAULT_CARD_FORMAT = /(\d{1,4})/g;
var CARD_TYPES = [{
  displayName: "Visa",
  type: "visa",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^4/,
  gaps: [4, 8, 12],
  lengths: [16, 18, 19],
  code: {
    name: "CVV",
    length: 3
  }
}, {
  displayName: "Mastercard",
  type: "mastercard",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^(5[1-5]|677189)|^(222[1-9]|2[3-6]\d{2}|27[0-1]\d|2720)/,
  gaps: [4, 8, 12],
  lengths: [16],
  code: {
    name: "CVC",
    length: 3
  }
}, {
  displayName: "American Express",
  type: "amex",
  format: /(\d{1,4})(\d{1,6})?(\d{1,5})?/,
  startPattern: /^3[47]/,
  gaps: [4, 10],
  lengths: [15],
  code: {
    name: "CID",
    length: 4
  }
}, {
  displayName: "Diners Club",
  type: "dinersclub",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^(36|38|30[0-5])/,
  gaps: [4, 10],
  lengths: [14, 16, 19],
  code: {
    name: "CVV",
    length: 3
  }
}, {
  displayName: "Discover",
  type: "discover",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^(6011|65|64[4-9]|622)/,
  gaps: [4, 8, 12],
  lengths: [16, 19],
  code: {
    name: "CID",
    length: 3
  }
}, {
  displayName: "JCB",
  type: "jcb",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^35/,
  gaps: [4, 8, 12],
  lengths: [16, 17, 18, 19],
  code: {
    name: "CVV",
    length: 3
  }
}, {
  displayName: "UnionPay",
  type: "unionpay",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^62/,
  gaps: [4, 8, 12],
  lengths: [14, 15, 16, 17, 18, 19],
  code: {
    name: "CVN",
    length: 3
  }
}, {
  displayName: "Maestro",
  type: "maestro",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^(5018|5020|5038|6304|6703|6708|6759|676[1-3])/,
  gaps: [4, 8, 12],
  lengths: [12, 13, 14, 15, 16, 17, 18, 19],
  code: {
    name: "CVC",
    length: 3
  }
}, {
  displayName: "Elo",
  type: "elo",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^(4011(78|79)|43(1274|8935)|45(1416|7393|763(1|2))|50(4175|6699|67[0-7][0-9]|9000)|627780|63(6297|6368)|650(03([^4])|04([0-9])|05(0|1)|4(0[5-9]|3[0-9]|8[5-9]|9[0-9])|5([0-2][0-9]|3[0-8])|9([2-6][0-9]|7[0-8])|541|700|720|901)|651652|655000|655021)/,
  gaps: [4, 8, 12],
  lengths: [16],
  code: {
    name: "CVE",
    length: 3
  }
}, {
  displayName: "Hipercard",
  type: "hipercard",
  format: DEFAULT_CARD_FORMAT,
  startPattern: /^(384100|384140|384160|606282|637095|637568|60(?!11))/,
  gaps: [4, 8, 12],
  lengths: [16],
  code: {
    name: "CVC",
    length: 3
  }
}];
var getCardTypeByValue = function getCardTypeByValue2(value) {
  return CARD_TYPES.filter(function(cardType) {
    return cardType.startPattern.test(value);
  })[0];
};
var getCardTypeByType = function getCardTypeByType2(type) {
  return CARD_TYPES.filter(function(cardType) {
    return cardType.type === type;
  })[0];
};
var cardTypes = Object.freeze({
  DEFAULT_CVC_LENGTH,
  DEFAULT_ZIP_LENGTH,
  DEFAULT_CARD_FORMAT,
  CARD_TYPES,
  getCardTypeByValue,
  getCardTypeByType
});

// node_modules/react-payment-inputs/es/utils/validator-0f41e23d.js
var MONTH_REGEX = /(0[1-9]|1[0-2])/;
var EMPTY_CARD_NUMBER = "Enter a card number";
var EMPTY_EXPIRY_DATE = "Enter an expiry date";
var EMPTY_CVC = "Enter a CVC";
var EMPTY_ZIP = "Enter a ZIP code";
var INVALID_CARD_NUMBER = "Card number is invalid";
var INVALID_EXPIRY_DATE = "Expiry date is invalid";
var INVALID_CVC = "CVC is invalid";
var MONTH_OUT_OF_RANGE = "Expiry month must be between 01 and 12";
var YEAR_OUT_OF_RANGE = "Expiry year cannot be in the past";
var DATE_OUT_OF_RANGE = "Expiry date cannot be in the past";
var hasCardNumberReachedMaxLength = function hasCardNumberReachedMaxLength2(currentValue) {
  var cardType = getCardTypeByValue(currentValue);
  return cardType && currentValue.length >= cardType.lengths[cardType.lengths.length - 1];
};
var isNumeric = function isNumeric2(e) {
  return /^\d*$/.test(e.key);
};
var validateLuhn = function validateLuhn2(cardNumber) {
  return cardNumber.split("").reverse().map(function(digit) {
    return parseInt(digit, 10);
  }).map(function(digit, idx) {
    return idx % 2 ? digit * 2 : digit;
  }).map(function(digit) {
    return digit > 9 ? digit % 10 + 1 : digit;
  }).reduce(function(accum, digit) {
    return accum += digit;
  }) % 10 === 0;
};
var getCardNumberError = function getCardNumberError2(cardNumber, cardNumberValidator) {
  var _ref = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref$errorMessages = _ref.errorMessages, errorMessages = _ref$errorMessages === void 0 ? {} : _ref$errorMessages;
  if (!cardNumber) {
    return errorMessages.emptyCardNumber || EMPTY_CARD_NUMBER;
  }
  var rawCardNumber = cardNumber.replace(/\s/g, "");
  var cardType = getCardTypeByValue(rawCardNumber);
  if (cardType && cardType.lengths) {
    var doesCardNumberMatchLength = cardType.lengths.includes(rawCardNumber.length);
    if (doesCardNumberMatchLength) {
      var isLuhnValid = validateLuhn(rawCardNumber);
      if (isLuhnValid) {
        if (cardNumberValidator) {
          return cardNumberValidator({
            cardNumber: rawCardNumber,
            cardType,
            errorMessages
          });
        }
        return;
      }
    }
  }
  return errorMessages.invalidCardNumber || INVALID_CARD_NUMBER;
};
var getExpiryDateError = function getExpiryDateError2(expiryDate, expiryValidator) {
  var _ref2 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, _ref2$errorMessages = _ref2.errorMessages, errorMessages = _ref2$errorMessages === void 0 ? {} : _ref2$errorMessages;
  if (!expiryDate) {
    return errorMessages.emptyExpiryDate || EMPTY_EXPIRY_DATE;
  }
  var rawExpiryDate = expiryDate.replace(" / ", "").replace("/", "");
  if (rawExpiryDate.length === 4) {
    var month = rawExpiryDate.slice(0, 2);
    var year = "20".concat(rawExpiryDate.slice(2, 4));
    if (!MONTH_REGEX.test(month)) {
      return errorMessages.monthOutOfRange || MONTH_OUT_OF_RANGE;
    }
    if (parseInt(year) < (/* @__PURE__ */ new Date()).getFullYear()) {
      return errorMessages.yearOutOfRange || YEAR_OUT_OF_RANGE;
    }
    if (parseInt(year) === (/* @__PURE__ */ new Date()).getFullYear() && parseInt(month) < (/* @__PURE__ */ new Date()).getMonth() + 1) {
      return errorMessages.dateOutOfRange || DATE_OUT_OF_RANGE;
    }
    if (expiryValidator) {
      return expiryValidator({
        expiryDate: {
          month,
          year
        },
        errorMessages
      });
    }
    return;
  }
  return errorMessages.invalidExpiryDate || INVALID_EXPIRY_DATE;
};
var getCVCError = function getCVCError2(cvc, cvcValidator) {
  var _ref3 = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, cardType = _ref3.cardType, _ref3$errorMessages = _ref3.errorMessages, errorMessages = _ref3$errorMessages === void 0 ? {} : _ref3$errorMessages;
  if (!cvc) {
    return errorMessages.emptyCVC || EMPTY_CVC;
  }
  if (cvc.length < 3) {
    return errorMessages.invalidCVC || INVALID_CVC;
  }
  if (cardType && cvc.length !== cardType.code.length) {
    return errorMessages.invalidCVC || INVALID_CVC;
  }
  if (cvcValidator) {
    return cvcValidator({
      cvc,
      cardType,
      errorMessages
    });
  }
  return;
};
var getZIPError = function getZIPError2(zip) {
  var _ref4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, _ref4$errorMessages = _ref4.errorMessages, errorMessages = _ref4$errorMessages === void 0 ? {} : _ref4$errorMessages;
  if (!zip) {
    return errorMessages.emptyZIP || EMPTY_ZIP;
  }
  return;
};
var validator = Object.freeze({
  EMPTY_CARD_NUMBER,
  EMPTY_EXPIRY_DATE,
  EMPTY_CVC,
  EMPTY_ZIP,
  INVALID_CARD_NUMBER,
  INVALID_EXPIRY_DATE,
  INVALID_CVC,
  MONTH_OUT_OF_RANGE,
  YEAR_OUT_OF_RANGE,
  DATE_OUT_OF_RANGE,
  hasCardNumberReachedMaxLength,
  isNumeric,
  validateLuhn,
  getCardNumberError,
  getExpiryDateError,
  getCVCError,
  getZIPError
});

// node_modules/react-payment-inputs/es/chunk-7eee66c0.js
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _extends() {
  _extends = Object.assign || function(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};
    var ownKeys = Object.keys(source);
    if (typeof Object.getOwnPropertySymbols === "function") {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }
    ownKeys.forEach(function(key) {
      _defineProperty(target, key, source[key]);
    });
  }
  return target;
}
function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null)
    return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;
  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0)
      continue;
    target[key] = source[key];
  }
  return target;
}
function _objectWithoutProperties(source, excluded) {
  if (source == null)
    return {};
  var target = _objectWithoutPropertiesLoose(source, excluded);
  var key, i;
  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0)
        continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key))
        continue;
      target[key] = source[key];
    }
  }
  return target;
}
function _taggedTemplateLiteral(strings, raw) {
  if (!raw) {
    raw = strings.slice(0);
  }
  return Object.freeze(Object.defineProperties(strings, {
    raw: {
      value: Object.freeze(raw)
    }
  }));
}
function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();
}
function _toArray(arr) {
  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();
}
function _arrayWithHoles(arr) {
  if (Array.isArray(arr))
    return arr;
}
function _iterableToArray(iter) {
  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === "[object Arguments]")
    return Array.from(iter);
}
function _iterableToArrayLimit(arr, i) {
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = void 0;
  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);
      if (i && _arr.length === i)
        break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null)
        _i["return"]();
    } finally {
      if (_d)
        throw _e;
    }
  }
  return _arr;
}
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance");
}

// node_modules/react-payment-inputs/es/utils/formatter-b0b2372d.js
var formatCardNumber = function formatCardNumber2(cardNumber) {
  var cardType = getCardTypeByValue(cardNumber);
  if (!cardType)
    return (cardNumber.match(/\d+/g) || []).join("");
  var format2 = cardType.format;
  if (format2 && format2.global) {
    return (cardNumber.match(format2) || []).join(" ");
  }
  if (format2) {
    var execResult = format2.exec(cardNumber.split(" ").join(""));
    if (execResult) {
      return execResult.splice(1, 3).filter(function(x) {
        return x;
      }).join(" ");
    }
  }
  return cardNumber;
};
var formatExpiry = function formatExpiry2(event) {
  var eventData = event.nativeEvent && event.nativeEvent.data;
  var prevExpiry = event.target.value.split(" / ").join("/");
  if (!prevExpiry)
    return null;
  var expiry = prevExpiry;
  if (/^[2-9]$/.test(expiry)) {
    expiry = "0".concat(expiry);
  }
  if (prevExpiry.length === 2 && +prevExpiry > 12) {
    var _prevExpiry$split = prevExpiry.split(""), _prevExpiry$split2 = _toArray(_prevExpiry$split), head = _prevExpiry$split2[0], tail = _prevExpiry$split2.slice(1);
    expiry = "0".concat(head, "/").concat(tail.join(""));
  }
  if (/^1[/-]$/.test(expiry)) {
    return "01 / ";
  }
  expiry = expiry.match(/(\d{1,2})/g) || [];
  if (expiry.length === 1) {
    if (!eventData && prevExpiry.includes("/")) {
      return expiry[0];
    }
    if (/\d{2}/.test(expiry)) {
      return "".concat(expiry[0], " / ");
    }
  }
  if (expiry.length > 2) {
    var _ref = expiry.join("").match(/^(\d{2}).*(\d{2})$/) || [], _ref2 = _slicedToArray(_ref, 3), _ref2$ = _ref2[1], month = _ref2$ === void 0 ? null : _ref2$, _ref2$2 = _ref2[2], year = _ref2$2 === void 0 ? null : _ref2$2;
    return [month, year].join(" / ");
  }
  return expiry.join(" / ");
};
var formatter = Object.freeze({
  formatCardNumber,
  formatExpiry
});

// node_modules/react-payment-inputs/es/utils/index.js
var BACKSPACE_KEY_CODE = "Backspace";
var ENTER_KEY_CODE = "Enter";
var isHighlighted = function isHighlighted2() {
  return (window.getSelection() || {
    type: void 0
  }).type === "Range";
};
var utils = {
  cardTypes,
  formatter,
  validator,
  BACKSPACE_KEY_CODE,
  ENTER_KEY_CODE,
  isHighlighted
};
var utils_default = utils;

// node_modules/react-payment-inputs/es/index.js
var import_react5 = __toESM(require_react());

// node_modules/react-payment-inputs/es/usePaymentInputs.js
var import_react = __toESM(require_react());
function usePaymentCard() {
  var _ref = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, _ref$autoFocus = _ref.autoFocus, autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus, errorMessages = _ref.errorMessages, onBlur = _ref.onBlur, onChange = _ref.onChange, onError = _ref.onError, onTouch = _ref.onTouch, cardNumberValidator = _ref.cardNumberValidator, cvcValidator = _ref.cvcValidator, expiryValidator = _ref.expiryValidator;
  var cardNumberField = import_react.default.useRef();
  var expiryDateField = import_react.default.useRef();
  var cvcField = import_react.default.useRef();
  var zipField = import_react.default.useRef();
  var _React$useState = import_react.default.useState({
    cardNumber: false,
    expiryDate: false,
    cvc: false,
    zip: false
  }), _React$useState2 = _slicedToArray(_React$useState, 2), touchedInputs = _React$useState2[0], setTouchedInputs = _React$useState2[1];
  var _React$useState3 = import_react.default.useState(false), _React$useState4 = _slicedToArray(_React$useState3, 2), isTouched = _React$useState4[0], setIsTouched = _React$useState4[1];
  var _React$useState5 = import_react.default.useState({
    cardNumber: void 0,
    expiryDate: void 0,
    cvc: void 0,
    zip: void 0
  }), _React$useState6 = _slicedToArray(_React$useState5, 2), erroredInputs = _React$useState6[0], setErroredInputs = _React$useState6[1];
  var _React$useState7 = import_react.default.useState(), _React$useState8 = _slicedToArray(_React$useState7, 2), error = _React$useState8[0], setError = _React$useState8[1];
  var _React$useState9 = import_react.default.useState(), _React$useState10 = _slicedToArray(_React$useState9, 2), cardType = _React$useState10[0], setCardType = _React$useState10[1];
  var _React$useState11 = import_react.default.useState(), _React$useState12 = _slicedToArray(_React$useState11, 2), focused = _React$useState12[0], setFocused = _React$useState12[1];
  var setInputError = import_react.default.useCallback(function(input, error2) {
    setErroredInputs(function(erroredInputs2) {
      if (erroredInputs2[input] === error2)
        return erroredInputs2;
      var newError = error2;
      var newErroredInputs = _objectSpread({}, erroredInputs2, _defineProperty({}, input, error2));
      if (error2) {
        setError(error2);
      } else {
        newError = Object.values(newErroredInputs).find(Boolean);
        setError(newError);
      }
      onError && onError(newError, newErroredInputs);
      return newErroredInputs;
    });
  }, []);
  var setInputTouched = import_react.default.useCallback(function(input, value) {
    requestAnimationFrame(function() {
      if (document.activeElement.tagName !== "INPUT") {
        setIsTouched(true);
      } else if (value === false) {
        setIsTouched(false);
      }
    });
    setTouchedInputs(function(touchedInputs2) {
      if (touchedInputs2[input] === value)
        return touchedInputs2;
      var newTouchedInputs = _objectSpread({}, touchedInputs2, _defineProperty({}, input, value));
      onTouch && onTouch(_defineProperty({}, input, value), newTouchedInputs);
      return newTouchedInputs;
    });
  }, []);
  var handleBlurCardNumber = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onBlur && props.onBlur(e);
      onBlur && onBlur(e);
      setFocused(void 0);
      setInputTouched("cardNumber", true);
    };
  }, [onBlur, setInputTouched]);
  var handleChangeCardNumber = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      var formattedCardNumber = e.target.value || "";
      var cardNumber = formattedCardNumber.replace(/\s/g, "");
      var cursorPosition = cardNumberField.current.selectionStart;
      var cardType2 = utils_default.cardTypes.getCardTypeByValue(cardNumber);
      setCardType(cardType2);
      setInputTouched("cardNumber", false);
      cardNumberField.current.value = utils_default.formatter.formatCardNumber(cardNumber);
      props.onChange && props.onChange(e);
      onChange && onChange(e);
      requestAnimationFrame(function() {
        if (document.activeElement !== cardNumberField.current)
          return;
        if (cardNumberField.current.value[cursorPosition - 1] === " ") {
          cursorPosition = cursorPosition + 1;
        }
        cardNumberField.current.setSelectionRange(cursorPosition, cursorPosition);
      });
      var cardNumberError = utils_default.validator.getCardNumberError(cardNumber, cardNumberValidator, {
        errorMessages
      });
      if (!cardNumberError && autoFocus) {
        expiryDateField.current && expiryDateField.current.focus();
      }
      setInputError("cardNumber", cardNumberError);
      props.onError && props.onError(cardNumberError);
    };
  }, [autoFocus, cardNumberValidator, errorMessages, onChange, setInputError, setInputTouched]);
  var handleFocusCardNumber = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onFocus && props.onFocus(e);
      setFocused("cardNumber");
    };
  }, []);
  var handleKeyPressCardNumber = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      var formattedCardNumber = e.target.value || "";
      var cardNumber = formattedCardNumber.replace(/\s/g, "");
      props.onKeyPress && props.onKeyPress(e);
      if (e.key !== utils_default.ENTER_KEY_CODE) {
        if (!utils_default.validator.isNumeric(e)) {
          e.preventDefault();
        }
        if (utils_default.validator.hasCardNumberReachedMaxLength(cardNumber)) {
          e.preventDefault();
        }
      }
    };
  }, []);
  var getCardNumberProps = import_react.default.useCallback(function() {
    var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var refKey = _ref2.refKey, props = _objectWithoutProperties(_ref2, ["refKey"]);
    return _objectSpread(_defineProperty({
      "aria-label": "Card number",
      autoComplete: "cc-number",
      id: "cardNumber",
      name: "cardNumber",
      placeholder: "Card number",
      type: "tel"
    }, refKey || "ref", cardNumberField), props, {
      onBlur: handleBlurCardNumber(props),
      onChange: handleChangeCardNumber(props),
      onFocus: handleFocusCardNumber(props),
      onKeyPress: handleKeyPressCardNumber(props)
    });
  }, [handleBlurCardNumber, handleChangeCardNumber, handleFocusCardNumber, handleKeyPressCardNumber]);
  var handleBlurExpiryDate = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onBlur && props.onBlur(e);
      onBlur && onBlur(e);
      setFocused(void 0);
      setInputTouched("expiryDate", true);
    };
  }, [onBlur, setInputTouched]);
  var handleChangeExpiryDate = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      setInputTouched("expiryDate", false);
      expiryDateField.current.value = utils_default.formatter.formatExpiry(e);
      props.onChange && props.onChange(e);
      onChange && onChange(e);
      var expiryDateError = utils_default.validator.getExpiryDateError(expiryDateField.current.value, expiryValidator, {
        errorMessages
      });
      if (!expiryDateError && autoFocus) {
        cvcField.current && cvcField.current.focus();
      }
      setInputError("expiryDate", expiryDateError);
      props.onError && props.onError(expiryDateError);
    };
  }, [autoFocus, errorMessages, expiryValidator, onChange, setInputError, setInputTouched]);
  var handleFocusExpiryDate = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onFocus && props.onFocus(e);
      setFocused("expiryDate");
    };
  }, []);
  var handleKeyDownExpiryDate = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onKeyDown && props.onKeyDown(e);
      if (e.key === utils_default.BACKSPACE_KEY_CODE && !e.target.value && autoFocus) {
        cardNumberField.current && cardNumberField.current.focus();
      }
    };
  }, [autoFocus]);
  var handleKeyPressExpiryDate = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      var formattedExpiryDate = e.target.value || "";
      var expiryDate = formattedExpiryDate.replace(" / ", "");
      props.onKeyPress && props.onKeyPress(e);
      if (e.key !== utils_default.ENTER_KEY_CODE) {
        if (!utils_default.validator.isNumeric(e)) {
          e.preventDefault();
        }
        if (expiryDate.length >= 4) {
          e.preventDefault();
        }
      }
    };
  }, []);
  var getExpiryDateProps = import_react.default.useCallback(function() {
    var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var refKey = _ref3.refKey, props = _objectWithoutProperties(_ref3, ["refKey"]);
    return _objectSpread(_defineProperty({
      "aria-label": "Expiry date in format MM YY",
      autoComplete: "cc-exp",
      id: "expiryDate",
      name: "expiryDate",
      placeholder: "MM/YY",
      type: "tel"
    }, refKey || "ref", expiryDateField), props, {
      onBlur: handleBlurExpiryDate(props),
      onChange: handleChangeExpiryDate(props),
      onFocus: handleFocusExpiryDate(props),
      onKeyDown: handleKeyDownExpiryDate(props),
      onKeyPress: handleKeyPressExpiryDate(props)
    });
  }, [handleBlurExpiryDate, handleChangeExpiryDate, handleFocusExpiryDate, handleKeyDownExpiryDate, handleKeyPressExpiryDate]);
  var handleBlurCVC = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onBlur && props.onBlur(e);
      onBlur && onBlur(e);
      setFocused(void 0);
      setInputTouched("cvc", true);
    };
  }, [onBlur, setInputTouched]);
  var handleChangeCVC = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var _ref4 = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, cardType2 = _ref4.cardType;
    return function(e) {
      var cvc = e.target.value;
      setInputTouched("cvc", false);
      props.onChange && props.onChange(e);
      onChange && onChange(e);
      var cvcError = utils_default.validator.getCVCError(cvc, cvcValidator, {
        cardType: cardType2,
        errorMessages
      });
      if (!cvcError && autoFocus) {
        zipField.current && zipField.current.focus();
      }
      setInputError("cvc", cvcError);
      props.onError && props.onError(cvcError);
    };
  }, [autoFocus, cvcValidator, errorMessages, onChange, setInputError, setInputTouched]);
  var handleFocusCVC = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onFocus && props.onFocus(e);
      setFocused("cvc");
    };
  }, []);
  var handleKeyDownCVC = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onKeyDown && props.onKeyDown(e);
      if (e.key === utils_default.BACKSPACE_KEY_CODE && !e.target.value && autoFocus) {
        expiryDateField.current && expiryDateField.current.focus();
      }
    };
  }, [autoFocus]);
  var handleKeyPressCVC = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var _ref5 = arguments.length > 1 ? arguments[1] : void 0, cardType2 = _ref5.cardType;
    return function(e) {
      var formattedCVC = e.target.value || "";
      var cvc = formattedCVC.replace(" / ", "");
      props.onKeyPress && props.onKeyPress(e);
      if (e.key !== utils_default.ENTER_KEY_CODE) {
        if (!utils_default.validator.isNumeric(e)) {
          e.preventDefault();
        }
        if (cardType2 && cvc.length >= cardType2.code.length) {
          e.preventDefault();
        }
        if (cvc.length >= 4) {
          e.preventDefault();
        }
      }
    };
  }, []);
  var getCVCProps = import_react.default.useCallback(function() {
    var _ref6 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var refKey = _ref6.refKey, props = _objectWithoutProperties(_ref6, ["refKey"]);
    return _objectSpread(_defineProperty({
      "aria-label": "CVC",
      autoComplete: "cc-csc",
      id: "cvc",
      name: "cvc",
      placeholder: cardType ? cardType.code.name : "CVC",
      type: "tel"
    }, refKey || "ref", cvcField), props, {
      onBlur: handleBlurCVC(props),
      onChange: handleChangeCVC(props, {
        cardType
      }),
      onFocus: handleFocusCVC(props),
      onKeyDown: handleKeyDownCVC(props),
      onKeyPress: handleKeyPressCVC(props, {
        cardType
      })
    });
  }, [cardType, handleBlurCVC, handleChangeCVC, handleFocusCVC, handleKeyDownCVC, handleKeyPressCVC]);
  var handleBlurZIP = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onBlur && props.onBlur(e);
      onBlur && onBlur(e);
      setFocused(void 0);
      setInputTouched("zip", true);
    };
  }, [onBlur, setInputTouched]);
  var handleChangeZIP = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      var zip = e.target.value;
      setInputTouched("zip", false);
      props.onChange && props.onChange(e);
      onChange && onChange(e);
      var zipError = utils_default.validator.getZIPError(zip, {
        errorMessages
      });
      setInputError("zip", zipError);
      props.onError && props.onError(zipError);
    };
  }, [errorMessages, onChange, setInputError, setInputTouched]);
  var handleFocusZIP = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onFocus && props.onFocus(e);
      setFocused("zip");
    };
  }, []);
  var handleKeyDownZIP = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onKeyDown && props.onKeyDown(e);
      if (e.key === utils_default.BACKSPACE_KEY_CODE && !e.target.value && autoFocus) {
        cvcField.current && cvcField.current.focus();
      }
    };
  }, [autoFocus]);
  var handleKeyPressZIP = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    return function(e) {
      props.onKeyPress && props.onKeyPress(e);
      if (e.key !== utils_default.ENTER_KEY_CODE) {
        if (!utils_default.validator.isNumeric(e)) {
          e.preventDefault();
        }
      }
    };
  }, []);
  var getZIPProps = import_react.default.useCallback(function() {
    var _ref7 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var refKey = _ref7.refKey, props = _objectWithoutProperties(_ref7, ["refKey"]);
    return _objectSpread(_defineProperty({
      autoComplete: "off",
      id: "zip",
      maxLength: "6",
      name: "zip",
      placeholder: "ZIP",
      type: "tel"
    }, refKey || "ref", zipField), props, {
      onBlur: handleBlurZIP(props),
      onChange: handleChangeZIP(props),
      onFocus: handleFocusZIP(props),
      onKeyDown: handleKeyDownZIP(props),
      onKeyPress: handleKeyPressZIP(props)
    });
  }, [handleBlurZIP, handleChangeZIP, handleFocusZIP, handleKeyDownZIP, handleKeyPressZIP]);
  var getCardImageProps = import_react.default.useCallback(function() {
    var props = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
    var images = props.images || {};
    return _objectSpread({
      "aria-label": cardType ? cardType.displayName : "Placeholder card",
      children: images[cardType ? cardType.type : "placeholder"] || images.placeholder,
      width: "1.5em",
      height: "1em",
      viewBox: "0 0 24 16"
    }, props);
  }, [cardType]);
  import_react.default.useLayoutEffect(function() {
    if (zipField.current) {
      var zipError = utils_default.validator.getZIPError(zipField.current.value, {
        errorMessages
      });
      setInputError("zip", zipError);
    }
    if (cvcField.current) {
      var cvcError = utils_default.validator.getCVCError(cvcField.current.value, cvcValidator, {
        errorMessages
      });
      setInputError("cvc", cvcError);
    }
    if (expiryDateField.current) {
      var expiryDateError = utils_default.validator.getExpiryDateError(expiryDateField.current.value, expiryValidator, {
        errorMessages
      });
      setInputError("expiryDate", expiryDateError);
    }
    if (cardNumberField.current) {
      var cardNumberError = utils_default.validator.getCardNumberError(cardNumberField.current.value, cardNumberValidator, {
        errorMessages
      });
      setInputError("cardNumber", cardNumberError);
    }
  }, [cardNumberValidator, cvcValidator, errorMessages, expiryValidator, setInputError]);
  import_react.default.useLayoutEffect(function() {
    if (cardNumberField.current) {
      cardNumberField.current.value = utils_default.formatter.formatCardNumber(cardNumberField.current.value);
    }
    if (expiryDateField.current) {
      expiryDateField.current.value = utils_default.formatter.formatExpiry({
        target: expiryDateField.current
      });
    }
  }, []);
  import_react.default.useLayoutEffect(function() {
    if (cardNumberField.current) {
      var _cardType = utils_default.cardTypes.getCardTypeByValue(cardNumberField.current.value);
      setCardType(_cardType);
    }
  }, []);
  return {
    getCardImageProps,
    getCardNumberProps,
    getExpiryDateProps,
    getCVCProps,
    getZIPProps,
    wrapperProps: {
      error,
      focused,
      isTouched
    },
    meta: {
      cardType,
      erroredInputs,
      error,
      focused,
      isTouched,
      touchedInputs
    }
  };
}
var usePaymentInputs_default = usePaymentCard;

// node_modules/react-payment-inputs/es/PaymentInputsContainer.js
var import_react2 = __toESM(require_react());
function PaymentInputsContainer(props) {
  var paymentInputs = usePaymentInputs_default(props);
  return props.children(paymentInputs);
}
var PaymentInputsContainer_default = PaymentInputsContainer;

// node_modules/styled-components/dist/styled-components.browser.esm.js
var import_stylis = __toESM(require_stylis_min());
var import_stylis_rule_sheet = __toESM(require_stylis_rule_sheet());
var import_react3 = __toESM(require_react());
var import_react_is = __toESM(require_react_is());

// node_modules/memoize-one/dist/memoize-one.esm.js
var simpleIsEqual = function simpleIsEqual2(a, b) {
  return a === b;
};
function index(resultFn, isEqual) {
  if (isEqual === void 0) {
    isEqual = simpleIsEqual;
  }
  var lastThis;
  var lastArgs = [];
  var lastResult;
  var calledOnce = false;
  var isNewArgEqualToLast = function isNewArgEqualToLast2(newArg, index3) {
    return isEqual(newArg, lastArgs[index3]);
  };
  var result = function result2() {
    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {
      newArgs[_key] = arguments[_key];
    }
    if (calledOnce && lastThis === this && newArgs.length === lastArgs.length && newArgs.every(isNewArgEqualToLast)) {
      return lastResult;
    }
    lastResult = resultFn.apply(this, newArgs);
    calledOnce = true;
    lastThis = this;
    lastArgs = newArgs;
    return lastResult;
  };
  return result;
}
var memoize_one_esm_default = index;

// node_modules/styled-components/dist/styled-components.browser.esm.js
var import_prop_types = __toESM(require_prop_types());
var import_react_dom = __toESM(require_react_dom());

// node_modules/@emotion/memoize/dist/memoize.esm.js
function memoize(fn) {
  var cache = {};
  return function(arg) {
    if (cache[arg] === void 0)
      cache[arg] = fn(arg);
    return cache[arg];
  };
}
var memoize_esm_default = memoize;

// node_modules/@emotion/is-prop-valid/dist/is-prop-valid.esm.js
var reactPropsRegex = /^((children|dangerouslySetInnerHTML|key|ref|autoFocus|defaultValue|defaultChecked|innerHTML|suppressContentEditableWarning|valueLink|accept|acceptCharset|accessKey|action|allow|allowFullScreen|allowTransparency|alt|async|autoComplete|autoPlay|capture|cellPadding|cellSpacing|challenge|charSet|checked|cite|classID|className|cols|colSpan|content|contentEditable|contextMenu|controls|controlsList|coords|crossOrigin|data|dateTime|default|defer|dir|disabled|download|draggable|encType|form|formAction|formEncType|formMethod|formNoValidate|formTarget|frameBorder|headers|height|hidden|high|href|hrefLang|htmlFor|httpEquiv|id|inputMode|integrity|is|keyParams|keyType|kind|label|lang|list|loop|low|marginHeight|marginWidth|max|maxLength|media|mediaGroup|method|min|minLength|multiple|muted|name|nonce|noValidate|open|optimum|pattern|placeholder|playsInline|poster|preload|profile|radioGroup|readOnly|referrerPolicy|rel|required|reversed|role|rows|rowSpan|sandbox|scope|scoped|scrolling|seamless|selected|shape|size|sizes|slot|span|spellCheck|src|srcDoc|srcLang|srcSet|start|step|style|summary|tabIndex|target|title|type|useMap|value|width|wmode|wrap|about|datatype|inlist|prefix|property|resource|typeof|vocab|autoCapitalize|autoCorrect|autoSave|color|itemProp|itemScope|itemType|itemID|itemRef|results|security|unselectable|accentHeight|accumulate|additive|alignmentBaseline|allowReorder|alphabetic|amplitude|arabicForm|ascent|attributeName|attributeType|autoReverse|azimuth|baseFrequency|baselineShift|baseProfile|bbox|begin|bias|by|calcMode|capHeight|clip|clipPathUnits|clipPath|clipRule|colorInterpolation|colorInterpolationFilters|colorProfile|colorRendering|contentScriptType|contentStyleType|cursor|cx|cy|d|decelerate|descent|diffuseConstant|direction|display|divisor|dominantBaseline|dur|dx|dy|edgeMode|elevation|enableBackground|end|exponent|externalResourcesRequired|fill|fillOpacity|fillRule|filter|filterRes|filterUnits|floodColor|floodOpacity|focusable|fontFamily|fontSize|fontSizeAdjust|fontStretch|fontStyle|fontVariant|fontWeight|format|from|fr|fx|fy|g1|g2|glyphName|glyphOrientationHorizontal|glyphOrientationVertical|glyphRef|gradientTransform|gradientUnits|hanging|horizAdvX|horizOriginX|ideographic|imageRendering|in|in2|intercept|k|k1|k2|k3|k4|kernelMatrix|kernelUnitLength|kerning|keyPoints|keySplines|keyTimes|lengthAdjust|letterSpacing|lightingColor|limitingConeAngle|local|markerEnd|markerMid|markerStart|markerHeight|markerUnits|markerWidth|mask|maskContentUnits|maskUnits|mathematical|mode|numOctaves|offset|opacity|operator|order|orient|orientation|origin|overflow|overlinePosition|overlineThickness|panose1|paintOrder|pathLength|patternContentUnits|patternTransform|patternUnits|pointerEvents|points|pointsAtX|pointsAtY|pointsAtZ|preserveAlpha|preserveAspectRatio|primitiveUnits|r|radius|refX|refY|renderingIntent|repeatCount|repeatDur|requiredExtensions|requiredFeatures|restart|result|rotate|rx|ry|scale|seed|shapeRendering|slope|spacing|specularConstant|specularExponent|speed|spreadMethod|startOffset|stdDeviation|stemh|stemv|stitchTiles|stopColor|stopOpacity|strikethroughPosition|strikethroughThickness|string|stroke|strokeDasharray|strokeDashoffset|strokeLinecap|strokeLinejoin|strokeMiterlimit|strokeOpacity|strokeWidth|surfaceScale|systemLanguage|tableValues|targetX|targetY|textAnchor|textDecoration|textRendering|textLength|to|transform|u1|u2|underlinePosition|underlineThickness|unicode|unicodeBidi|unicodeRange|unitsPerEm|vAlphabetic|vHanging|vIdeographic|vMathematical|values|vectorEffect|version|vertAdvY|vertOriginX|vertOriginY|viewBox|viewTarget|visibility|widths|wordSpacing|writingMode|x|xHeight|x1|x2|xChannelSelector|xlinkActuate|xlinkArcrole|xlinkHref|xlinkRole|xlinkShow|xlinkTitle|xlinkType|xmlBase|xmlns|xmlnsXlink|xmlLang|xmlSpace|y|y1|y2|yChannelSelector|z|zoomAndPan|for|class)|(on[A-Z].*)|((data|aria|x)-.*))$/i;
var index2 = memoize_esm_default(reactPropsRegex.test.bind(reactPropsRegex));
var is_prop_valid_esm_default = index2;

// node_modules/styled-components/dist/styled-components.browser.esm.js
var interleave = function(strings, interpolations) {
  var result = [strings[0]];
  for (var i = 0, len = interpolations.length; i < len; i += 1) {
    result.push(interpolations[i], strings[i + 1]);
  }
  return result;
};
var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function(obj) {
  return typeof obj;
} : function(obj) {
  return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
};
var classCallCheck = function(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
var createClass = function() {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor)
        descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }
  return function(Constructor, protoProps, staticProps) {
    if (protoProps)
      defineProperties(Constructor.prototype, protoProps);
    if (staticProps)
      defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
var _extends2 = Object.assign || function(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];
    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
  return target;
};
var inherits = function(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass)
    Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
};
var objectWithoutProperties = function(obj, keys) {
  var target = {};
  for (var i in obj) {
    if (keys.indexOf(i) >= 0)
      continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i))
      continue;
    target[i] = obj[i];
  }
  return target;
};
var possibleConstructorReturn = function(self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self;
};
var isPlainObject = function(x) {
  return (typeof x === "undefined" ? "undefined" : _typeof(x)) === "object" && x.constructor === Object;
};
var EMPTY_ARRAY = Object.freeze([]);
var EMPTY_OBJECT = Object.freeze({});
function isFunction(test) {
  return typeof test === "function";
}
function getComponentName(target) {
  return target.displayName || target.name || "Component";
}
function isStyledComponent(target) {
  return target && typeof target.styledComponentId === "string";
}
var SC_ATTR = typeof process !== "undefined" && process.env.SC_ATTR || "data-styled";
var SC_VERSION_ATTR = "data-styled-version";
var SC_STREAM_ATTR = "data-styled-streamed";
var IS_BROWSER = typeof window !== "undefined" && "HTMLElement" in window;
var DISABLE_SPEEDY = true;
var ERRORS = true ? {
  "1": "Cannot create styled-component for component: %s.\n\n",
  "2": "Can't collect styles once you've consumed a `ServerStyleSheet`'s styles! `ServerStyleSheet` is a one off instance for each server-side render cycle.\n\n- Are you trying to reuse it across renders?\n- Are you accidentally calling collectStyles twice?\n\n",
  "3": "Streaming SSR is only supported in a Node.js environment; Please do not try to call this method in the browser.\n\n",
  "4": "The `StyleSheetManager` expects a valid target or sheet prop!\n\n- Does this error occur on the client and is your target falsy?\n- Does this error occur on the server and is the sheet falsy?\n\n",
  "5": "The clone method cannot be used on the client!\n\n- Are you running in a client-like environment on the server?\n- Are you trying to run SSR on the client?\n\n",
  "6": "Trying to insert a new style tag, but the given Node is unmounted!\n\n- Are you using a custom target that isn't mounted?\n- Does your document not have a valid head element?\n- Have you accidentally removed a style tag manually?\n\n",
  "7": 'ThemeProvider: Please return an object from your "theme" prop function, e.g.\n\n```js\ntheme={() => ({})}\n```\n\n',
  "8": 'ThemeProvider: Please make your "theme" prop an object.\n\n',
  "9": "Missing document `<head>`\n\n",
  "10": "Cannot find a StyleSheet instance. Usually this happens if there are multiple copies of styled-components loaded at once. Check out this issue for how to troubleshoot and fix the common cases where this situation can happen: https://github.com/styled-components/styled-components/issues/1941#issuecomment-417862021\n\n",
  "11": "_This error was replaced with a dev-time warning, it will be deleted for v4 final._ [createGlobalStyle] received children which will not be rendered. Please use the component without passing children elements.\n"
} : {};
function format() {
  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
    args[_key] = arguments[_key];
  }
  var a = args[0];
  var b = [];
  var c = void 0;
  for (c = 1; c < args.length; c += 1) {
    b.push(args[c]);
  }
  b.forEach(function(d) {
    a = a.replace(/%[a-z]/, d);
  });
  return a;
}
var StyledComponentsError = function(_Error) {
  inherits(StyledComponentsError2, _Error);
  function StyledComponentsError2(code) {
    classCallCheck(this, StyledComponentsError2);
    for (var _len2 = arguments.length, interpolations = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      interpolations[_key2 - 1] = arguments[_key2];
    }
    if (false) {
      var _this = possibleConstructorReturn(this, _Error.call(this, "An error occurred. See https://github.com/styled-components/styled-components/blob/master/src/utils/errors.md#" + code + " for more information. " + (interpolations ? "Additional arguments: " + interpolations.join(", ") : "")));
    } else {
      var _this = possibleConstructorReturn(this, _Error.call(this, format.apply(void 0, [ERRORS[code]].concat(interpolations)).trim()));
    }
    return possibleConstructorReturn(_this);
  }
  return StyledComponentsError2;
}(Error);
var SC_COMPONENT_ID = /^[^\S\n]*?\/\* sc-component-id:\s*(\S+)\s+\*\//gm;
var extractComps = function(maybeCSS) {
  var css2 = "" + (maybeCSS || "");
  var existingComponents = [];
  css2.replace(SC_COMPONENT_ID, function(match, componentId, matchIndex) {
    existingComponents.push({ componentId, matchIndex });
    return match;
  });
  return existingComponents.map(function(_ref, i) {
    var componentId = _ref.componentId, matchIndex = _ref.matchIndex;
    var nextComp = existingComponents[i + 1];
    var cssFromDOM = nextComp ? css2.slice(matchIndex, nextComp.matchIndex) : css2.slice(matchIndex);
    return { componentId, cssFromDOM };
  });
};
var COMMENT_REGEX = /^\s*\/\/.*$/gm;
var SELF_REFERENTIAL_COMBINATOR = /(&(?! *[+~>])([^&{][^{]+)[^+~>]*)?([+~>] *)&/g;
var stylisSplitter = new import_stylis.default({
  global: false,
  cascade: true,
  keyframe: false,
  prefix: false,
  compress: false,
  semicolon: true
});
var stylis = new import_stylis.default({
  global: false,
  cascade: true,
  keyframe: false,
  prefix: true,
  compress: false,
  semicolon: false
  // NOTE: This means "autocomplete missing semicolons"
});
var parsingRules = [];
var returnRulesPlugin = function returnRulesPlugin2(context) {
  if (context === -2) {
    var parsedRules = parsingRules;
    parsingRules = [];
    return parsedRules;
  }
};
var parseRulesPlugin = (0, import_stylis_rule_sheet.default)(function(rule) {
  parsingRules.push(rule);
});
stylis.use([parseRulesPlugin, returnRulesPlugin]);
stylisSplitter.use([parseRulesPlugin, returnRulesPlugin]);
var stringifyRules = function stringifyRules2(rules, selector, prefix) {
  var componentId = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : "&";
  var flatCSS = rules.join("").replace(COMMENT_REGEX, "");
  var cssStr = (selector && prefix ? prefix + " " + selector + " { " + flatCSS + " }" : flatCSS).replace(SELF_REFERENTIAL_COMBINATOR, "$1$3." + componentId + "$2");
  return stylis(prefix || !selector ? "" : selector, cssStr);
};
var splitByRules = function splitByRules2(css2) {
  return stylisSplitter("", css2);
};
var getNonce = function() {
  return typeof __webpack_nonce__ !== "undefined" ? __webpack_nonce__ : null;
};
var once = function(cb) {
  var called = false;
  return function() {
    if (!called) {
      called = true;
      cb();
    }
  };
};
var addNameForId = function addNameForId2(names, id, name) {
  if (name) {
    var namesForId = names[id] || (names[id] = /* @__PURE__ */ Object.create(null));
    namesForId[name] = true;
  }
};
var resetIdNames = function resetIdNames2(names, id) {
  names[id] = /* @__PURE__ */ Object.create(null);
};
var hasNameForId = function hasNameForId2(names) {
  return function(id, name) {
    return names[id] !== void 0 && names[id][name];
  };
};
var stringifyNames = function stringifyNames2(names) {
  var str = "";
  for (var id in names) {
    str += Object.keys(names[id]).join(" ") + " ";
  }
  return str.trim();
};
var cloneNames = function cloneNames2(names) {
  var clone = /* @__PURE__ */ Object.create(null);
  for (var id in names) {
    clone[id] = _extends2({}, names[id]);
  }
  return clone;
};
var sheetForTag = function sheetForTag2(tag) {
  if (tag.sheet)
    return tag.sheet;
  var size = document.styleSheets.length;
  for (var i = 0; i < size; i += 1) {
    var sheet = document.styleSheets[i];
    if (sheet.ownerNode === tag)
      return sheet;
  }
  throw new StyledComponentsError(10);
};
var safeInsertRule = function safeInsertRule2(sheet, cssRule, index3) {
  if (!cssRule)
    return false;
  var maxIndex = sheet.cssRules.length;
  try {
    sheet.insertRule(cssRule, index3 <= maxIndex ? index3 : maxIndex);
  } catch (err) {
    return false;
  }
  return true;
};
var deleteRules = function deleteRules2(sheet, removalIndex, size) {
  var lowerBound = removalIndex - size;
  for (var i = removalIndex; i > lowerBound; i -= 1) {
    sheet.deleteRule(i);
  }
};
var makeTextMarker = function makeTextMarker2(id) {
  return "\n/* sc-component-id: " + id + " */\n";
};
var addUpUntilIndex = function addUpUntilIndex2(sizes, index3) {
  var totalUpToIndex = 0;
  for (var i = 0; i <= index3; i += 1) {
    totalUpToIndex += sizes[i];
  }
  return totalUpToIndex;
};
var makeStyleTag = function makeStyleTag2(target, tagEl, insertBefore) {
  var el = document.createElement("style");
  el.setAttribute(SC_ATTR, "");
  el.setAttribute(SC_VERSION_ATTR, "4.0.0");
  var nonce = getNonce();
  if (nonce) {
    el.setAttribute("nonce", nonce);
  }
  el.appendChild(document.createTextNode(""));
  if (target && !tagEl) {
    target.appendChild(el);
  } else {
    if (!tagEl || !target || !tagEl.parentNode) {
      throw new StyledComponentsError(6);
    }
    tagEl.parentNode.insertBefore(el, insertBefore ? tagEl : tagEl.nextSibling);
  }
  return el;
};
var wrapAsHtmlTag = function wrapAsHtmlTag2(css2, names) {
  return function(additionalAttrs) {
    var nonce = getNonce();
    var attrs = [nonce && 'nonce="' + nonce + '"', SC_ATTR + '="' + stringifyNames(names) + '"', SC_VERSION_ATTR + '="4.0.0"', additionalAttrs];
    var htmlAttr = attrs.filter(Boolean).join(" ");
    return "<style " + htmlAttr + ">" + css2() + "</style>";
  };
};
var wrapAsElement = function wrapAsElement2(css2, names) {
  return function() {
    var _props;
    var props = (_props = {}, _props[SC_ATTR] = stringifyNames(names), _props[SC_VERSION_ATTR] = "4.0.0", _props);
    var nonce = getNonce();
    if (nonce) {
      props.nonce = nonce;
    }
    return import_react3.default.createElement("style", _extends2({}, props, { dangerouslySetInnerHTML: { __html: css2() } }));
  };
};
var getIdsFromMarkersFactory = function getIdsFromMarkersFactory2(markers) {
  return function() {
    return Object.keys(markers);
  };
};
var makeSpeedyTag = function makeSpeedyTag2(el, getImportRuleTag) {
  var names = /* @__PURE__ */ Object.create(null);
  var markers = /* @__PURE__ */ Object.create(null);
  var sizes = [];
  var extractImport = getImportRuleTag !== void 0;
  var usedImportRuleTag = false;
  var insertMarker = function insertMarker2(id) {
    var prev = markers[id];
    if (prev !== void 0) {
      return prev;
    }
    markers[id] = sizes.length;
    sizes.push(0);
    resetIdNames(names, id);
    return markers[id];
  };
  var insertRules = function insertRules2(id, cssRules, name) {
    var marker = insertMarker(id);
    var sheet = sheetForTag(el);
    var insertIndex = addUpUntilIndex(sizes, marker);
    var injectedRules = 0;
    var importRules = [];
    var cssRulesSize = cssRules.length;
    for (var i = 0; i < cssRulesSize; i += 1) {
      var cssRule = cssRules[i];
      var mayHaveImport = extractImport;
      if (mayHaveImport && cssRule.indexOf("@import") !== -1) {
        importRules.push(cssRule);
      } else if (safeInsertRule(sheet, cssRule, insertIndex + injectedRules)) {
        mayHaveImport = false;
        injectedRules += 1;
      }
    }
    if (extractImport && importRules.length > 0) {
      usedImportRuleTag = true;
      getImportRuleTag().insertRules(id + "-import", importRules);
    }
    sizes[marker] += injectedRules;
    addNameForId(names, id, name);
  };
  var removeRules = function removeRules2(id) {
    var marker = markers[id];
    if (marker === void 0)
      return;
    var size = sizes[marker];
    var sheet = sheetForTag(el);
    var removalIndex = addUpUntilIndex(sizes, marker) - 1;
    deleteRules(sheet, removalIndex, size);
    sizes[marker] = 0;
    resetIdNames(names, id);
    if (extractImport && usedImportRuleTag) {
      getImportRuleTag().removeRules(id + "-import");
    }
  };
  var css2 = function css3() {
    var _sheetForTag = sheetForTag(el), cssRules = _sheetForTag.cssRules;
    var str = "";
    for (var id in markers) {
      str += makeTextMarker(id);
      var marker = markers[id];
      var end = addUpUntilIndex(sizes, marker);
      var size = sizes[marker];
      for (var i = end - size; i < end; i += 1) {
        var rule = cssRules[i];
        if (rule !== void 0) {
          str += rule.cssText;
        }
      }
    }
    return str;
  };
  return {
    clone: function clone() {
      throw new StyledComponentsError(5);
    },
    css: css2,
    getIds: getIdsFromMarkersFactory(markers),
    hasNameForId: hasNameForId(names),
    insertMarker,
    insertRules,
    removeRules,
    sealed: false,
    styleTag: el,
    toElement: wrapAsElement(css2, names),
    toHTML: wrapAsHtmlTag(css2, names)
  };
};
var makeTextNode = function makeTextNode2(id) {
  return document.createTextNode(makeTextMarker(id));
};
var makeBrowserTag = function makeBrowserTag2(el, getImportRuleTag) {
  var names = /* @__PURE__ */ Object.create(null);
  var markers = /* @__PURE__ */ Object.create(null);
  var extractImport = getImportRuleTag !== void 0;
  var usedImportRuleTag = false;
  var insertMarker = function insertMarker2(id) {
    var prev = markers[id];
    if (prev !== void 0) {
      return prev;
    }
    markers[id] = makeTextNode(id);
    el.appendChild(markers[id]);
    names[id] = /* @__PURE__ */ Object.create(null);
    return markers[id];
  };
  var insertRules = function insertRules2(id, cssRules, name) {
    var marker = insertMarker(id);
    var importRules = [];
    var cssRulesSize = cssRules.length;
    for (var i = 0; i < cssRulesSize; i += 1) {
      var rule = cssRules[i];
      var mayHaveImport = extractImport;
      if (mayHaveImport && rule.indexOf("@import") !== -1) {
        importRules.push(rule);
      } else {
        mayHaveImport = false;
        var separator = i === cssRulesSize - 1 ? "" : " ";
        marker.appendData("" + rule + separator);
      }
    }
    addNameForId(names, id, name);
    if (extractImport && importRules.length > 0) {
      usedImportRuleTag = true;
      getImportRuleTag().insertRules(id + "-import", importRules);
    }
  };
  var removeRules = function removeRules2(id) {
    var marker = markers[id];
    if (marker === void 0)
      return;
    var newMarker = makeTextNode(id);
    el.replaceChild(newMarker, marker);
    markers[id] = newMarker;
    resetIdNames(names, id);
    if (extractImport && usedImportRuleTag) {
      getImportRuleTag().removeRules(id + "-import");
    }
  };
  var css2 = function css3() {
    var str = "";
    for (var id in markers) {
      str += markers[id].data;
    }
    return str;
  };
  return {
    clone: function clone() {
      throw new StyledComponentsError(5);
    },
    css: css2,
    getIds: getIdsFromMarkersFactory(markers),
    hasNameForId: hasNameForId(names),
    insertMarker,
    insertRules,
    removeRules,
    sealed: false,
    styleTag: el,
    toElement: wrapAsElement(css2, names),
    toHTML: wrapAsHtmlTag(css2, names)
  };
};
var makeServerTag = function makeServerTag2(namesArg, markersArg) {
  var names = namesArg === void 0 ? /* @__PURE__ */ Object.create(null) : namesArg;
  var markers = markersArg === void 0 ? /* @__PURE__ */ Object.create(null) : markersArg;
  var insertMarker = function insertMarker2(id) {
    var prev = markers[id];
    if (prev !== void 0) {
      return prev;
    }
    return markers[id] = [""];
  };
  var insertRules = function insertRules2(id, cssRules, name) {
    var marker = insertMarker(id);
    marker[0] += cssRules.join(" ");
    addNameForId(names, id, name);
  };
  var removeRules = function removeRules2(id) {
    var marker = markers[id];
    if (marker === void 0)
      return;
    marker[0] = "";
    resetIdNames(names, id);
  };
  var css2 = function css3() {
    var str = "";
    for (var id in markers) {
      var cssForId = markers[id][0];
      if (cssForId) {
        str += makeTextMarker(id) + cssForId;
      }
    }
    return str;
  };
  var clone = function clone2() {
    var namesClone = cloneNames(names);
    var markersClone = /* @__PURE__ */ Object.create(null);
    for (var id in markers) {
      markersClone[id] = [markers[id][0]];
    }
    return makeServerTag2(namesClone, markersClone);
  };
  var tag = {
    clone,
    css: css2,
    getIds: getIdsFromMarkersFactory(markers),
    hasNameForId: hasNameForId(names),
    insertMarker,
    insertRules,
    removeRules,
    sealed: false,
    styleTag: null,
    toElement: wrapAsElement(css2, names),
    toHTML: wrapAsHtmlTag(css2, names)
  };
  return tag;
};
var makeTag = function makeTag2(target, tagEl, forceServer, insertBefore, getImportRuleTag) {
  if (IS_BROWSER && !forceServer) {
    var el = makeStyleTag(target, tagEl, insertBefore);
    if (DISABLE_SPEEDY) {
      return makeBrowserTag(el, getImportRuleTag);
    } else {
      return makeSpeedyTag(el, getImportRuleTag);
    }
  }
  return makeServerTag();
};
var makeRehydrationTag = function makeRehydrationTag2(tag, els, extracted, immediateRehydration) {
  var rehydrate = once(function() {
    for (var i = 0, len = extracted.length; i < len; i += 1) {
      var _extracted$i = extracted[i], componentId = _extracted$i.componentId, cssFromDOM = _extracted$i.cssFromDOM;
      var cssRules = splitByRules(cssFromDOM);
      tag.insertRules(componentId, cssRules);
    }
    for (var _i = 0, _len = els.length; _i < _len; _i += 1) {
      var el = els[_i];
      if (el.parentNode) {
        el.parentNode.removeChild(el);
      }
    }
  });
  if (immediateRehydration)
    rehydrate();
  return _extends2({}, tag, {
    /* add rehydration hook to methods */
    insertMarker: function insertMarker(id) {
      rehydrate();
      return tag.insertMarker(id);
    },
    insertRules: function insertRules(id, cssRules, name) {
      rehydrate();
      return tag.insertRules(id, cssRules, name);
    },
    removeRules: function removeRules(id) {
      rehydrate();
      return tag.removeRules(id);
    }
  });
};
var SPLIT_REGEX = /\s+/;
var MAX_SIZE = void 0;
if (IS_BROWSER) {
  MAX_SIZE = DISABLE_SPEEDY ? 40 : 1e3;
} else {
  MAX_SIZE = -1;
}
var sheetRunningId = 0;
var master = void 0;
var StyleSheet = function() {
  function StyleSheet2() {
    var _this = this;
    var target = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : IS_BROWSER ? document.head : null;
    var forceServer = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
    classCallCheck(this, StyleSheet2);
    this.getImportRuleTag = function() {
      var importRuleTag = _this.importRuleTag;
      if (importRuleTag !== void 0) {
        return importRuleTag;
      }
      var firstTag = _this.tags[0];
      var insertBefore = true;
      return _this.importRuleTag = makeTag(_this.target, firstTag ? firstTag.styleTag : null, _this.forceServer, insertBefore);
    };
    sheetRunningId += 1;
    this.id = sheetRunningId;
    this.forceServer = forceServer;
    this.target = forceServer ? null : target;
    this.tagMap = {};
    this.deferred = {};
    this.rehydratedNames = {};
    this.ignoreRehydratedNames = {};
    this.tags = [];
    this.capacity = 1;
    this.clones = [];
  }
  StyleSheet2.prototype.rehydrate = function rehydrate() {
    if (!IS_BROWSER || this.forceServer) {
      return this;
    }
    var els = [];
    var extracted = [];
    var isStreamed = false;
    var nodes = document.querySelectorAll("style[" + SC_ATTR + "][" + SC_VERSION_ATTR + '="4.0.0"]');
    var nodesSize = nodes.length;
    if (nodesSize === 0) {
      return this;
    }
    for (var i = 0; i < nodesSize; i += 1) {
      var el = nodes[i];
      if (!isStreamed)
        isStreamed = !!el.getAttribute(SC_STREAM_ATTR);
      var elNames = (el.getAttribute(SC_ATTR) || "").trim().split(SPLIT_REGEX);
      var elNamesSize = elNames.length;
      for (var j = 0; j < elNamesSize; j += 1) {
        var name = elNames[j];
        this.rehydratedNames[name] = true;
      }
      extracted.push.apply(extracted, extractComps(el.textContent));
      els.push(el);
    }
    var extractedSize = extracted.length;
    if (extractedSize === 0) {
      return this;
    }
    var tag = this.makeTag(null);
    var rehydrationTag = makeRehydrationTag(tag, els, extracted, isStreamed);
    this.capacity = Math.max(1, MAX_SIZE - extractedSize);
    this.tags.push(rehydrationTag);
    for (var _j = 0; _j < extractedSize; _j += 1) {
      this.tagMap[extracted[_j].componentId] = rehydrationTag;
    }
    return this;
  };
  StyleSheet2.reset = function reset() {
    var forceServer = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : false;
    master = new StyleSheet2(void 0, forceServer).rehydrate();
  };
  StyleSheet2.prototype.clone = function clone() {
    var sheet = new StyleSheet2(this.target, this.forceServer);
    this.clones.push(sheet);
    sheet.tags = this.tags.map(function(tag) {
      var ids = tag.getIds();
      var newTag = tag.clone();
      for (var i = 0; i < ids.length; i += 1) {
        sheet.tagMap[ids[i]] = newTag;
      }
      return newTag;
    });
    sheet.rehydratedNames = _extends2({}, this.rehydratedNames);
    sheet.deferred = _extends2({}, this.deferred);
    return sheet;
  };
  StyleSheet2.prototype.sealAllTags = function sealAllTags() {
    this.capacity = 1;
    this.tags.forEach(function(tag) {
      tag.sealed = true;
    });
  };
  StyleSheet2.prototype.makeTag = function makeTag$$1(tag) {
    var lastEl = tag ? tag.styleTag : null;
    var insertBefore = false;
    return makeTag(this.target, lastEl, this.forceServer, insertBefore, this.getImportRuleTag);
  };
  StyleSheet2.prototype.getTagForId = function getTagForId(id) {
    var prev = this.tagMap[id];
    if (prev !== void 0 && !prev.sealed) {
      return prev;
    }
    var tag = this.tags[this.tags.length - 1];
    this.capacity -= 1;
    if (this.capacity === 0) {
      this.capacity = MAX_SIZE;
      tag = this.makeTag(tag);
      this.tags.push(tag);
    }
    return this.tagMap[id] = tag;
  };
  StyleSheet2.prototype.hasId = function hasId(id) {
    return this.tagMap[id] !== void 0;
  };
  StyleSheet2.prototype.hasNameForId = function hasNameForId3(id, name) {
    if (this.ignoreRehydratedNames[id] === void 0 && this.rehydratedNames[name]) {
      return true;
    }
    var tag = this.tagMap[id];
    return tag !== void 0 && tag.hasNameForId(id, name);
  };
  StyleSheet2.prototype.deferredInject = function deferredInject(id, cssRules) {
    if (this.tagMap[id] !== void 0)
      return;
    var clones = this.clones;
    for (var i = 0; i < clones.length; i += 1) {
      clones[i].deferredInject(id, cssRules);
    }
    this.getTagForId(id).insertMarker(id);
    this.deferred[id] = cssRules;
  };
  StyleSheet2.prototype.inject = function inject(id, cssRules, name) {
    var clones = this.clones;
    for (var i = 0; i < clones.length; i += 1) {
      clones[i].inject(id, cssRules, name);
    }
    var tag = this.getTagForId(id);
    if (this.deferred[id] !== void 0) {
      var rules = this.deferred[id].concat(cssRules);
      tag.insertRules(id, rules, name);
      this.deferred[id] = void 0;
    } else {
      tag.insertRules(id, cssRules, name);
    }
  };
  StyleSheet2.prototype.remove = function remove(id) {
    var tag = this.tagMap[id];
    if (tag === void 0)
      return;
    var clones = this.clones;
    for (var i = 0; i < clones.length; i += 1) {
      clones[i].remove(id);
    }
    tag.removeRules(id);
    this.ignoreRehydratedNames[id] = true;
    this.deferred[id] = void 0;
  };
  StyleSheet2.prototype.toHTML = function toHTML() {
    return this.tags.map(function(tag) {
      return tag.toHTML();
    }).join("");
  };
  StyleSheet2.prototype.toReactElements = function toReactElements() {
    var id = this.id;
    return this.tags.map(function(tag, i) {
      var key = "sc-" + id + "-" + i;
      return (0, import_react3.cloneElement)(tag.toElement(), { key });
    });
  };
  createClass(StyleSheet2, null, [{
    key: "master",
    get: function get$$1() {
      return master || (master = new StyleSheet2().rehydrate());
    }
    /* NOTE: This is just for backwards-compatibility with jest-styled-components */
  }, {
    key: "instance",
    get: function get$$1() {
      return StyleSheet2.master;
    }
  }]);
  return StyleSheet2;
}();
var Keyframes = function() {
  function Keyframes2(name, rules) {
    var _this = this;
    classCallCheck(this, Keyframes2);
    this.inject = function(styleSheet) {
      if (!styleSheet.hasNameForId(_this.id, _this.name)) {
        styleSheet.inject(_this.id, _this.rules, _this.name);
      }
    };
    this.name = name;
    this.rules = rules;
    this.id = "sc-keyframes-" + name;
  }
  Keyframes2.prototype.getName = function getName() {
    return this.name;
  };
  return Keyframes2;
}();
var uppercasePattern = /([A-Z])/g;
var msPattern = /^ms-/;
function hyphenateStyleName(string) {
  return string.replace(uppercasePattern, "-$1").toLowerCase().replace(msPattern, "-ms-");
}
var objToCss = function objToCss2(obj, prevKey) {
  var css2 = Object.keys(obj).filter(function(key) {
    var chunk = obj[key];
    return chunk !== void 0 && chunk !== null && chunk !== false && chunk !== "";
  }).map(function(key) {
    if (isPlainObject(obj[key]))
      return objToCss2(obj[key], key);
    return hyphenateStyleName(key) + ": " + obj[key] + ";";
  }).join(" ");
  return prevKey ? prevKey + " {\n  " + css2 + "\n}" : css2;
};
var isFalsish = function isFalsish2(chunk) {
  return chunk === void 0 || chunk === null || chunk === false || chunk === "";
};
function flatten(chunk, executionContext, styleSheet) {
  if (Array.isArray(chunk)) {
    var ruleSet = [];
    for (var i = 0, len = chunk.length, result; i < len; i += 1) {
      result = flatten(chunk[i], executionContext, styleSheet);
      if (result === null)
        continue;
      else if (Array.isArray(result))
        ruleSet.push.apply(ruleSet, result);
      else
        ruleSet.push(result);
    }
    return ruleSet;
  }
  if (isFalsish(chunk)) {
    return null;
  }
  if (isStyledComponent(chunk)) {
    return "." + chunk.styledComponentId;
  }
  if (isFunction(chunk)) {
    if (executionContext) {
      if (true) {
        try {
          if ((0, import_react_is.isElement)(new chunk(executionContext))) {
            console.warn(getComponentName(chunk) + " is not a styled component and cannot be referred to via component selector. See https://www.styled-components.com/docs/advanced#referring-to-other-components for more details.");
          }
        } catch (e) {
        }
      }
      return flatten(chunk(executionContext), executionContext, styleSheet);
    } else
      return chunk;
  }
  if (chunk instanceof Keyframes) {
    if (styleSheet) {
      chunk.inject(styleSheet);
      return chunk.getName();
    } else
      return chunk;
  }
  return isPlainObject(chunk) ? objToCss(chunk) : chunk.toString();
}
function css(styles) {
  for (var _len = arguments.length, interpolations = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
    interpolations[_key - 1] = arguments[_key];
  }
  if (isFunction(styles) || isPlainObject(styles)) {
    return flatten(interleave(EMPTY_ARRAY, [styles].concat(interpolations)));
  }
  return flatten(interleave(styles, interpolations));
}
function constructWithOptions(componentConstructor, tag) {
  var options = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT;
  if (!(0, import_react_is.isValidElementType)(tag)) {
    throw new StyledComponentsError(1, String(tag));
  }
  var templateFunction = function templateFunction2() {
    return componentConstructor(tag, options, css.apply(void 0, arguments));
  };
  templateFunction.withConfig = function(config) {
    return constructWithOptions(componentConstructor, tag, _extends2({}, options, config));
  };
  templateFunction.attrs = function(attrs) {
    return constructWithOptions(componentConstructor, tag, _extends2({}, options, {
      attrs: _extends2({}, options.attrs || EMPTY_OBJECT, attrs)
    }));
  };
  return templateFunction;
}
function murmurhash(c) {
  for (var e = c.length | 0, a = e | 0, d = 0, b; e >= 4; ) {
    b = c.charCodeAt(d) & 255 | (c.charCodeAt(++d) & 255) << 8 | (c.charCodeAt(++d) & 255) << 16 | (c.charCodeAt(++d) & 255) << 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), b ^= b >>> 24, b = 1540483477 * (b & 65535) + ((1540483477 * (b >>> 16) & 65535) << 16), a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16) ^ b, e -= 4, ++d;
  }
  switch (e) {
    case 3:
      a ^= (c.charCodeAt(d + 2) & 255) << 16;
    case 2:
      a ^= (c.charCodeAt(d + 1) & 255) << 8;
    case 1:
      a ^= c.charCodeAt(d) & 255, a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);
  }
  a ^= a >>> 13;
  a = 1540483477 * (a & 65535) + ((1540483477 * (a >>> 16) & 65535) << 16);
  return (a ^ a >>> 15) >>> 0;
}
var charsLength = 52;
var getAlphabeticChar = function getAlphabeticChar2(code) {
  return String.fromCharCode(code + (code > 25 ? 39 : 97));
};
function generateAlphabeticName(code) {
  var name = "";
  var x = void 0;
  for (x = code; x > charsLength; x = Math.floor(x / charsLength)) {
    name = getAlphabeticChar(x % charsLength) + name;
  }
  return getAlphabeticChar(x % charsLength) + name;
}
function isStaticRules(rules, attrs) {
  for (var i = 0; i < rules.length; i += 1) {
    var rule = rules[i];
    if (Array.isArray(rule) && !isStaticRules(rule)) {
      return false;
    } else if (isFunction(rule) && !isStyledComponent(rule)) {
      return false;
    }
  }
  if (attrs !== void 0) {
    for (var key in attrs) {
      var value = attrs[key];
      if (isFunction(value)) {
        return false;
      }
    }
  }
  return true;
}
var isHMREnabled = typeof module !== "undefined" && module.hot;
var hasher = function hasher2(str) {
  return generateAlphabeticName(murmurhash(str));
};
var ComponentStyle = function() {
  function ComponentStyle2(rules, attrs, componentId) {
    classCallCheck(this, ComponentStyle2);
    this.rules = rules;
    this.isStatic = !isHMREnabled && isStaticRules(rules, attrs);
    this.componentId = componentId;
    if (!StyleSheet.master.hasId(componentId)) {
      var placeholder = true ? ["." + componentId + " {}"] : [];
      StyleSheet.master.deferredInject(componentId, placeholder);
    }
  }
  ComponentStyle2.prototype.generateAndInjectStyles = function generateAndInjectStyles(executionContext, styleSheet) {
    var isStatic = this.isStatic, componentId = this.componentId, lastClassName = this.lastClassName;
    if (IS_BROWSER && isStatic && lastClassName !== void 0 && styleSheet.hasNameForId(componentId, lastClassName)) {
      return lastClassName;
    }
    var flatCSS = flatten(this.rules, executionContext, styleSheet);
    var name = hasher(this.componentId + flatCSS.join(""));
    if (!styleSheet.hasNameForId(componentId, name)) {
      styleSheet.inject(this.componentId, stringifyRules(flatCSS, "." + name, void 0, componentId), name);
    }
    this.lastClassName = name;
    return name;
  };
  ComponentStyle2.generateName = function generateName(str) {
    return hasher(str);
  };
  return ComponentStyle2;
}();
var LIMIT = 200;
var createWarnTooManyClasses = function(displayName) {
  var generatedClasses = {};
  var warningSeen = false;
  return function(className) {
    if (!warningSeen) {
      generatedClasses[className] = true;
      if (Object.keys(generatedClasses).length >= LIMIT) {
        console.warn("Over " + LIMIT + " classes were generated for component " + displayName + ". \nConsider using the attrs method, together with a style object for frequently changed styles.\nExample:\n  const Component = styled.div.attrs({\n    style: ({ background }) => ({\n      background,\n    }),\n  })`width: 100%;`\n\n  <Component />");
        warningSeen = true;
        generatedClasses = {};
      }
    }
  };
};
var determineTheme = function(props, fallbackTheme) {
  var defaultProps = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : EMPTY_OBJECT;
  var isDefaultTheme = defaultProps ? props.theme === defaultProps.theme : false;
  var theme = props.theme && !isDefaultTheme ? props.theme : fallbackTheme || defaultProps.theme;
  return theme;
};
var escapeRegex = /[[\].#*$><+~=|^:(),"'`-]+/g;
var dashesAtEnds = /(^-|-$)/g;
function escape(str) {
  return str.replace(escapeRegex, "-").replace(dashesAtEnds, "");
}
function isTag(target) {
  return typeof target === "string";
}
function generateDisplayName(target) {
  return isTag(target) ? "styled." + target : "Styled(" + getComponentName(target) + ")";
}
var _TYPE_STATICS;
var REACT_STATICS = {
  childContextTypes: true,
  contextTypes: true,
  defaultProps: true,
  displayName: true,
  getDerivedStateFromProps: true,
  propTypes: true,
  type: true
};
var KNOWN_STATICS = {
  name: true,
  length: true,
  prototype: true,
  caller: true,
  callee: true,
  arguments: true,
  arity: true
};
var TYPE_STATICS = (_TYPE_STATICS = {}, _TYPE_STATICS[import_react_is.ForwardRef] = {
  $$typeof: true,
  render: true
}, _TYPE_STATICS);
var defineProperty$1 = Object.defineProperty;
var getOwnPropertyNames = Object.getOwnPropertyNames;
var _Object$getOwnPropert = Object.getOwnPropertySymbols;
var getOwnPropertySymbols = _Object$getOwnPropert === void 0 ? function() {
  return [];
} : _Object$getOwnPropert;
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var getPrototypeOf = Object.getPrototypeOf;
var objectPrototype = Object.prototype;
var arrayPrototype = Array.prototype;
function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
  if (typeof sourceComponent !== "string") {
    var inheritedComponent = getPrototypeOf(sourceComponent);
    if (inheritedComponent && inheritedComponent !== objectPrototype) {
      hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
    }
    var keys = arrayPrototype.concat(
      getOwnPropertyNames(sourceComponent),
      // $FlowFixMe
      getOwnPropertySymbols(sourceComponent)
    );
    var targetStatics = TYPE_STATICS[targetComponent.$$typeof] || REACT_STATICS;
    var sourceStatics = TYPE_STATICS[sourceComponent.$$typeof] || REACT_STATICS;
    var i = keys.length;
    var descriptor = void 0;
    var key = void 0;
    while (i--) {
      key = keys[i];
      if (
        // $FlowFixMe
        !KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && // $FlowFixMe
        !(targetStatics && targetStatics[key])
      ) {
        descriptor = getOwnPropertyDescriptor(sourceComponent, key);
        if (descriptor) {
          try {
            defineProperty$1(targetComponent, key, descriptor);
          } catch (e) {
          }
        }
      }
    }
    return targetComponent;
  }
  return targetComponent;
}
function isDerivedReactComponent(fn) {
  return !!(fn && fn.prototype && fn.prototype.isReactComponent);
}
var ThemeContext = (0, import_react3.createContext)();
var ThemeConsumer = ThemeContext.Consumer;
var ThemeProvider = function(_Component) {
  inherits(ThemeProvider2, _Component);
  function ThemeProvider2(props) {
    classCallCheck(this, ThemeProvider2);
    var _this = possibleConstructorReturn(this, _Component.call(this, props));
    _this.getContext = memoize_one_esm_default(_this.getContext.bind(_this));
    _this.renderInner = _this.renderInner.bind(_this);
    return _this;
  }
  ThemeProvider2.prototype.render = function render() {
    if (!this.props.children)
      return null;
    return import_react3.default.createElement(
      ThemeContext.Consumer,
      null,
      this.renderInner
    );
  };
  ThemeProvider2.prototype.renderInner = function renderInner(outerTheme) {
    var context = this.getContext(this.props.theme, outerTheme);
    return import_react3.default.createElement(
      ThemeContext.Provider,
      { value: context },
      import_react3.default.Children.only(this.props.children)
    );
  };
  ThemeProvider2.prototype.getTheme = function getTheme(theme, outerTheme) {
    if (isFunction(theme)) {
      var mergedTheme = theme(outerTheme);
      if (mergedTheme === null || Array.isArray(mergedTheme) || (typeof mergedTheme === "undefined" ? "undefined" : _typeof(mergedTheme)) !== "object") {
        throw new StyledComponentsError(7);
      }
      return mergedTheme;
    }
    if (theme === null || Array.isArray(theme) || (typeof theme === "undefined" ? "undefined" : _typeof(theme)) !== "object") {
      throw new StyledComponentsError(8);
    }
    return _extends2({}, outerTheme, theme);
  };
  ThemeProvider2.prototype.getContext = function getContext(theme, outerTheme) {
    return this.getTheme(theme, outerTheme);
  };
  return ThemeProvider2;
}(import_react3.Component);
var ServerStyleSheet = function() {
  function ServerStyleSheet2() {
    classCallCheck(this, ServerStyleSheet2);
    this.masterSheet = StyleSheet.master;
    this.instance = this.masterSheet.clone();
    this.sealed = false;
  }
  ServerStyleSheet2.prototype.seal = function seal() {
    if (!this.sealed) {
      var index3 = this.masterSheet.clones.indexOf(this.instance);
      this.masterSheet.clones.splice(index3, 1);
      this.sealed = true;
    }
  };
  ServerStyleSheet2.prototype.collectStyles = function collectStyles(children) {
    if (this.sealed) {
      throw new StyledComponentsError(2);
    }
    return import_react3.default.createElement(
      StyleSheetManager,
      { sheet: this.instance },
      children
    );
  };
  ServerStyleSheet2.prototype.getStyleTags = function getStyleTags() {
    this.seal();
    return this.instance.toHTML();
  };
  ServerStyleSheet2.prototype.getStyleElement = function getStyleElement() {
    this.seal();
    return this.instance.toReactElements();
  };
  ServerStyleSheet2.prototype.interleaveWithNodeStream = function interleaveWithNodeStream(readableStream) {
    var _this = this;
    {
      throw new StyledComponentsError(3);
    }
    var instance = this.instance;
    var instanceTagIndex = 0;
    var streamAttr = SC_STREAM_ATTR + '="true"';
    var transformer = new stream.Transform({
      transform: function appendStyleChunks(chunk, _, callback) {
        var tags = instance.tags;
        var html = "";
        for (; instanceTagIndex < tags.length; instanceTagIndex += 1) {
          var tag = tags[instanceTagIndex];
          html += tag.toHTML(streamAttr);
        }
        instance.sealAllTags();
        this.push(html + chunk);
        callback();
      }
    });
    readableStream.on("end", function() {
      return _this.seal();
    });
    readableStream.on("error", function(err) {
      _this.seal();
      transformer.emit("error", err);
    });
    return readableStream.pipe(transformer);
  };
  return ServerStyleSheet2;
}();
var StyleSheetContext = (0, import_react3.createContext)();
var StyleSheetConsumer = StyleSheetContext.Consumer;
var StyleSheetManager = function(_Component) {
  inherits(StyleSheetManager2, _Component);
  function StyleSheetManager2(props) {
    classCallCheck(this, StyleSheetManager2);
    var _this = possibleConstructorReturn(this, _Component.call(this, props));
    _this.getContext = memoize_one_esm_default(_this.getContext);
    return _this;
  }
  StyleSheetManager2.prototype.getContext = function getContext(sheet, target) {
    if (sheet) {
      return sheet;
    } else if (target) {
      return new StyleSheet(target);
    } else {
      throw new StyledComponentsError(4);
    }
  };
  StyleSheetManager2.prototype.render = function render() {
    var _props = this.props, children = _props.children, sheet = _props.sheet, target = _props.target;
    var context = this.getContext(sheet, target);
    return import_react3.default.createElement(
      StyleSheetContext.Provider,
      { value: context },
      import_react3.default.Children.only(children)
    );
  };
  return StyleSheetManager2;
}(import_react3.Component);
true ? StyleSheetManager.propTypes = {
  sheet: import_prop_types.default.oneOfType([import_prop_types.default.instanceOf(StyleSheet), import_prop_types.default.instanceOf(ServerStyleSheet)]),
  target: import_prop_types.default.shape({
    appendChild: import_prop_types.default.func.isRequired
  })
} : void 0;
var classNameUseCheckInjector = function(target) {
  var elementClassName = "";
  var targetCDM = target.componentDidMount;
  target.componentDidMount = function componentDidMount() {
    if (typeof targetCDM === "function") {
      targetCDM.call(this);
    }
    var classNames = elementClassName.replace(/ +/g, " ").trim().split(" ");
    var node = import_react_dom.default.findDOMNode(this);
    var selector = classNames.map(function(s) {
      return "." + s;
    }).join("");
    if (node && node.nodeType === 1 && !classNames.every(function(className) {
      return node.classList && node.classList.contains(className);
    }) && !node.querySelector(selector)) {
      console.warn("It looks like you've wrapped styled() around your React component (" + getComponentName(this.props.forwardedClass.target) + "), but the className prop is not being passed down to a child. No styles will be rendered unless className is composed within your React component.");
    }
  };
  var prevRenderInner = target.renderInner;
  target.renderInner = function renderInner() {
    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var element = prevRenderInner.apply(this, args);
    elementClassName = element.props.className;
    return element;
  };
};
var identifiers = {};
function generateId(_ComponentStyle, _displayName, parentComponentId) {
  var displayName = typeof _displayName !== "string" ? "sc" : escape(_displayName);
  var nr = (identifiers[displayName] || 0) + 1;
  identifiers[displayName] = nr;
  var componentId = displayName + "-" + _ComponentStyle.generateName(displayName + nr);
  return parentComponentId ? parentComponentId + "-" + componentId : componentId;
}
var warnInnerRef = once(function() {
  return (
    // eslint-disable-next-line no-console
    console.warn('The "innerRef" API has been removed in styled-components v4 in favor of React 16 ref forwarding, use "ref" instead like a typical component.')
  );
});
var StyledComponent = function(_Component) {
  inherits(StyledComponent2, _Component);
  function StyledComponent2() {
    classCallCheck(this, StyledComponent2);
    var _this = possibleConstructorReturn(this, _Component.call(this));
    _this.attrs = {};
    _this.renderOuter = _this.renderOuter.bind(_this);
    _this.renderInner = _this.renderInner.bind(_this);
    if (IS_BROWSER) {
      classNameUseCheckInjector(_this);
    }
    return _this;
  }
  StyledComponent2.prototype.render = function render() {
    return import_react3.default.createElement(
      StyleSheetConsumer,
      null,
      this.renderOuter
    );
  };
  StyledComponent2.prototype.renderOuter = function renderOuter(styleSheet) {
    this.styleSheet = styleSheet;
    return import_react3.default.createElement(
      ThemeConsumer,
      null,
      this.renderInner
    );
  };
  StyledComponent2.prototype.renderInner = function renderInner(theme) {
    var _props$forwardedClass = this.props.forwardedClass, componentStyle = _props$forwardedClass.componentStyle, defaultProps = _props$forwardedClass.defaultProps, styledComponentId = _props$forwardedClass.styledComponentId, target = _props$forwardedClass.target;
    var generatedClassName = void 0;
    if (componentStyle.isStatic) {
      generatedClassName = this.generateAndInjectStyles(EMPTY_OBJECT, this.props, this.styleSheet);
    } else if (theme !== void 0) {
      generatedClassName = this.generateAndInjectStyles(determineTheme(this.props, theme, defaultProps), this.props, this.styleSheet);
    } else {
      generatedClassName = this.generateAndInjectStyles(this.props.theme || EMPTY_OBJECT, this.props, this.styleSheet);
    }
    var elementToBeCreated = this.props.as || this.attrs.as || target;
    var isTargetTag = isTag(elementToBeCreated);
    var propsForElement = _extends2({}, this.attrs);
    var key = void 0;
    for (key in this.props) {
      if (key === "innerRef") {
        warnInnerRef();
      }
      if (key === "forwardedClass" || key === "as")
        continue;
      else if (key === "forwardedRef")
        propsForElement.ref = this.props[key];
      else if (!isTargetTag || is_prop_valid_esm_default(key)) {
        propsForElement[key] = key === "style" && key in this.attrs ? _extends2({}, this.attrs[key], this.props[key]) : this.props[key];
      }
    }
    propsForElement.className = [this.props.className, styledComponentId, this.attrs.className, generatedClassName].filter(Boolean).join(" ");
    return (0, import_react3.createElement)(elementToBeCreated, propsForElement);
  };
  StyledComponent2.prototype.buildExecutionContext = function buildExecutionContext(theme, props, attrs) {
    var context = _extends2({}, props, { theme });
    if (attrs === void 0)
      return context;
    this.attrs = {};
    var attr = void 0;
    var key = void 0;
    for (key in attrs) {
      attr = attrs[key];
      this.attrs[key] = isFunction(attr) && !isDerivedReactComponent(attr) && !isStyledComponent(attr) ? attr(context) : attr;
    }
    return _extends2({}, context, this.attrs);
  };
  StyledComponent2.prototype.generateAndInjectStyles = function generateAndInjectStyles(theme, props) {
    var styleSheet = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : StyleSheet.master;
    var _props$forwardedClass2 = props.forwardedClass, attrs = _props$forwardedClass2.attrs, componentStyle = _props$forwardedClass2.componentStyle, warnTooManyClasses = _props$forwardedClass2.warnTooManyClasses;
    if (componentStyle.isStatic && attrs === void 0) {
      return componentStyle.generateAndInjectStyles(EMPTY_OBJECT, styleSheet);
    }
    var className = componentStyle.generateAndInjectStyles(this.buildExecutionContext(theme, props, props.forwardedClass.attrs), styleSheet);
    if (warnTooManyClasses) {
      warnTooManyClasses(className);
    }
    return className;
  };
  return StyledComponent2;
}(import_react3.Component);
function createStyledComponent(target, options, rules) {
  var isTargetStyledComp = isStyledComponent(target);
  var isClass = !isTag(target);
  var _options$displayName = options.displayName, displayName = _options$displayName === void 0 ? generateDisplayName(target) : _options$displayName, _options$componentId = options.componentId, componentId = _options$componentId === void 0 ? generateId(ComponentStyle, options.displayName, options.parentComponentId) : _options$componentId, _options$ParentCompon = options.ParentComponent, ParentComponent = _options$ParentCompon === void 0 ? StyledComponent : _options$ParentCompon, attrs = options.attrs;
  var styledComponentId = options.displayName && options.componentId ? escape(options.displayName) + "-" + options.componentId : options.componentId || componentId;
  var finalAttrs = (
    // $FlowFixMe
    isTargetStyledComp && target.attrs ? _extends2({}, target.attrs, attrs) : attrs
  );
  var componentStyle = new ComponentStyle(isTargetStyledComp ? (
    // fold the underlying StyledComponent rules up (implicit extend)
    // $FlowFixMe
    target.componentStyle.rules.concat(rules)
  ) : rules, finalAttrs, styledComponentId);
  var WrappedStyledComponent = import_react3.default.forwardRef(function(props, ref) {
    return import_react3.default.createElement(ParentComponent, _extends2({}, props, { forwardedClass: WrappedStyledComponent, forwardedRef: ref }));
  });
  WrappedStyledComponent.attrs = finalAttrs;
  WrappedStyledComponent.componentStyle = componentStyle;
  WrappedStyledComponent.displayName = displayName;
  WrappedStyledComponent.styledComponentId = styledComponentId;
  WrappedStyledComponent.target = isTargetStyledComp ? target.target : target;
  WrappedStyledComponent.withComponent = function withComponent(tag) {
    var previousComponentId = options.componentId, optionsToCopy = objectWithoutProperties(options, ["componentId"]);
    var newComponentId = previousComponentId && previousComponentId + "-" + (isTag(tag) ? tag : escape(getComponentName(tag)));
    var newOptions = _extends2({}, optionsToCopy, {
      attrs: finalAttrs,
      componentId: newComponentId,
      ParentComponent
    });
    return createStyledComponent(tag, newOptions, rules);
  };
  if (true) {
    WrappedStyledComponent.warnTooManyClasses = createWarnTooManyClasses(displayName);
  }
  if (isClass) {
    hoistNonReactStatics(WrappedStyledComponent, target, {
      // all SC-specific things should not be hoisted
      attrs: true,
      componentStyle: true,
      displayName: true,
      styledComponentId: true,
      target: true,
      warnTooManyClasses: true,
      withComponent: true
    });
  }
  return WrappedStyledComponent;
}
var domElements = [
  "a",
  "abbr",
  "address",
  "area",
  "article",
  "aside",
  "audio",
  "b",
  "base",
  "bdi",
  "bdo",
  "big",
  "blockquote",
  "body",
  "br",
  "button",
  "canvas",
  "caption",
  "cite",
  "code",
  "col",
  "colgroup",
  "data",
  "datalist",
  "dd",
  "del",
  "details",
  "dfn",
  "dialog",
  "div",
  "dl",
  "dt",
  "em",
  "embed",
  "fieldset",
  "figcaption",
  "figure",
  "footer",
  "form",
  "h1",
  "h2",
  "h3",
  "h4",
  "h5",
  "h6",
  "head",
  "header",
  "hgroup",
  "hr",
  "html",
  "i",
  "iframe",
  "img",
  "input",
  "ins",
  "kbd",
  "keygen",
  "label",
  "legend",
  "li",
  "link",
  "main",
  "map",
  "mark",
  "marquee",
  "menu",
  "menuitem",
  "meta",
  "meter",
  "nav",
  "noscript",
  "object",
  "ol",
  "optgroup",
  "option",
  "output",
  "p",
  "param",
  "picture",
  "pre",
  "progress",
  "q",
  "rp",
  "rt",
  "ruby",
  "s",
  "samp",
  "script",
  "section",
  "select",
  "small",
  "source",
  "span",
  "strong",
  "style",
  "sub",
  "summary",
  "sup",
  "table",
  "tbody",
  "td",
  "textarea",
  "tfoot",
  "th",
  "thead",
  "time",
  "title",
  "tr",
  "track",
  "u",
  "ul",
  "var",
  "video",
  "wbr",
  // SVG
  "circle",
  "clipPath",
  "defs",
  "ellipse",
  "foreignObject",
  "g",
  "image",
  "line",
  "linearGradient",
  "mask",
  "path",
  "pattern",
  "polygon",
  "polyline",
  "radialGradient",
  "rect",
  "stop",
  "svg",
  "text",
  "tspan"
];
var styled = function styled2(tag) {
  return constructWithOptions(createStyledComponent, tag);
};
domElements.forEach(function(domElement) {
  styled[domElement] = styled(domElement);
});
var GlobalStyle = function() {
  function GlobalStyle2(rules, componentId) {
    classCallCheck(this, GlobalStyle2);
    this.rules = rules;
    this.componentId = componentId;
    this.isStatic = isStaticRules(rules);
    if (!StyleSheet.master.hasId(componentId)) {
      StyleSheet.master.deferredInject(componentId, []);
    }
  }
  GlobalStyle2.prototype.createStyles = function createStyles(executionContext, styleSheet) {
    var flatCSS = flatten(this.rules, executionContext, styleSheet);
    var css2 = stringifyRules(flatCSS, "");
    styleSheet.inject(this.componentId, css2);
  };
  GlobalStyle2.prototype.removeStyles = function removeStyles(styleSheet) {
    var componentId = this.componentId;
    if (styleSheet.hasId(componentId)) {
      styleSheet.remove(componentId);
    }
  };
  GlobalStyle2.prototype.renderStyles = function renderStyles(executionContext, styleSheet) {
    this.removeStyles(styleSheet);
    this.createStyles(executionContext, styleSheet);
  };
  return GlobalStyle2;
}();
if (IS_BROWSER) {
  window.scCGSHMRCache = {};
}
if (typeof navigator !== "undefined" && navigator.product === "ReactNative") {
  console.warn("It looks like you've imported 'styled-components' on React Native.\nPerhaps you're looking to import 'styled-components/native'?\nRead more about this at https://www.styled-components.com/docs/basics#react-native");
}
if (typeof window !== "undefined" && typeof navigator !== "undefined" && typeof navigator.userAgent === "string" && navigator.userAgent.indexOf("Node.js") === -1 && navigator.userAgent.indexOf("jsdom") === -1) {
  window["__styled-components-init__"] = window["__styled-components-init__"] || 0;
  if (window["__styled-components-init__"] === 1) {
    console.warn("It looks like there are several instances of 'styled-components' initialized in this application. This may cause dynamic styles not rendering properly, errors happening during rehydration process and makes your application bigger without a good reason.\n\nSee https://s-c.sh/2BAXzed for more info.");
  }
  window["__styled-components-init__"] += 1;
}
var styled_components_browser_esm_default = styled;

// node_modules/react-payment-inputs/es/PaymentInputsWrapper.js
var import_react4 = __toESM(require_react());
function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n  color: #c9444d;\n  font-size: 0.75rem;\n  margin-top: 0.25rem;\n\n  & {\n    ", ";\n  }\n"]);
  _templateObject5 = function _templateObject52() {
    return data;
  };
  return data;
}
function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n        border-color: #444bc9;\n        box-shadow: #444bc9 0px 0px 0px 1px;\n        ", ";\n      "]);
  _templateObject4 = function _templateObject42() {
    return data;
  };
  return data;
}
function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n        border-color: #c9444d;\n        box-shadow: #c9444d 0px 0px 0px 1px;\n        ", ";\n      "]);
  _templateObject3 = function _templateObject32() {
    return data;
  };
  return data;
}
function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n  align-items: center;\n  background-color: white;\n  border: 1px solid #bdbdbd;\n  box-shadow: inset 0px 1px 2px #e5e5e5;\n  border-radius: 0.2em;\n  display: flex;\n  height: 2.5em;\n  padding: 0.4em 0.6em;\n\n  & {\n    ", ";\n  }\n\n  & {\n    ", ";\n  }\n\n  & input {\n    border: unset;\n    margin: unset;\n    padding: unset;\n    outline: unset;\n    font-size: inherit;\n\n    & {\n      ", ";\n    }\n\n    ", ";\n  }\n\n  & svg {\n    margin-right: 0.6em;\n    & {\n      ", ";\n    }\n  }\n\n  & input#cardNumber {\n    width: 11em;\n    & {\n      ", ";\n    }\n  }\n\n  & input#expiryDate {\n    width: 4em;\n    & {\n      ", ";\n    }\n  }\n\n  & input#cvc {\n    width: 2.5em;\n    & {\n      ", ";\n    }\n  }\n\n  & input#zip {\n    width: 4em;\n    & {\n      ", ";\n    }\n  }\n\n  ", ";\n"]);
  _templateObject2 = function _templateObject22() {
    return data;
  };
  return data;
}
function _templateObject() {
  var data = _taggedTemplateLiteral(["\n  display: inline-flex;\n  flex-direction: column;\n\n  & {\n    ", ";\n  }\n\n  ", ";\n"]);
  _templateObject = function _templateObject6() {
    return data;
  };
  return data;
}
var FieldWrapper = styled_components_browser_esm_default.div(_templateObject(), function(props) {
  return props.hasErrored && props.styles.fieldWrapper ? props.styles.fieldWrapper.errored : void 0;
}, function(props) {
  return props.styles.fieldWrapper ? props.styles.fieldWrapper.base : void 0;
});
var InputWrapper = styled_components_browser_esm_default.div(_templateObject2(), function(props) {
  return props.hasErrored && css(_templateObject3(), function(props2) {
    return props2.styles.inputWrapper && props2.styles.inputWrapper.errored;
  });
}, function(props) {
  return props.focused && css(_templateObject4(), function(props2) {
    return props2.styles.inputWrapper && props2.styles.inputWrapper.focused;
  });
}, function(props) {
  return props.hasErrored && props.styles.input ? props.styles.input.errored : void 0;
}, function(props) {
  return props.styles.input && props.styles.input.base;
}, function(props) {
  return props.styles.cardImage;
}, function(props) {
  return props.styles.input && props.styles.input.cardNumber;
}, function(props) {
  return props.styles.input && props.styles.input.expiryDate;
}, function(props) {
  return props.styles.input && props.styles.input.cvc;
}, function(props) {
  return props.styles.input && props.styles.input.zip;
}, function(props) {
  return props.styles.inputWrapper ? props.styles.inputWrapper.base : void 0;
});
var ErrorText = styled_components_browser_esm_default.div(_templateObject5(), function(props) {
  return props.styles.errorText ? props.styles.errorText.base : void 0;
});
function PaymentInputsWrapper(props) {
  var children = props.children, error = props.error, errorTextProps = props.errorTextProps, focused = props.focused, inputWrapperProps = props.inputWrapperProps, isTouched = props.isTouched, styles = props.styles, restProps = _objectWithoutProperties(props, ["children", "error", "errorTextProps", "focused", "inputWrapperProps", "isTouched", "styles"]);
  var hasErrored = error && isTouched;
  return import_react4.default.createElement(FieldWrapper, _extends({
    hasErrored,
    styles
  }, restProps), import_react4.default.createElement(InputWrapper, _extends({
    focused,
    hasErrored,
    styles
  }, inputWrapperProps), children), hasErrored && import_react4.default.createElement(ErrorText, _extends({
    styles
  }, errorTextProps), error));
}
PaymentInputsWrapper.defaultProps = {
  styles: {}
};
var PaymentInputsWrapper_default = PaymentInputsWrapper;
export {
  PaymentInputsContainer_default as PaymentInputsContainer,
  PaymentInputsWrapper_default as PaymentInputsWrapper,
  getCVCError,
  getCardNumberError,
  getExpiryDateError,
  getZIPError,
  usePaymentInputs_default as usePaymentInputs
};
//# sourceMappingURL=react-payment-inputs.js.map
